/*
 * v8 - Retailer API
 * The bol.com API for retailers.
 *
 * OpenAPI spec version: 8.x
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.model.*;
import org.junit.Ignore;
import org.junit.Test;

/**
 * API tests for ReturnsApi
 */
@Ignore
public class ReturnsApiTest {

    private final ReturnsApi api = new ReturnsApi();


    /**
     * Create a return
     * <p>
     * Create a return, and automatically handle it with the provided handling result. When successfully created, the resulting return id is provided in the process status.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void createReturnTest() throws Exception {
        CreateReturnRequest body = null;
        ProcessStatus response = api.createReturn(body);

        // TODO: test validations
    }

    /**
     * Get a return by return id
     * <p>
     * Retrieve a return based on the return id.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void getReturnTest() throws Exception {
        String returnId = null;
        ModelReturn response = api.getReturn(returnId);

        // TODO: test validations
    }

    /**
     * Get returns
     * <p>
     * Get a paginated list of multi-item returns. Handled returns are sorted by date in descending order, while unhandled returns are sorted by date in ascending order.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void getReturnsTest() throws Exception {
        Integer page = null;
        Boolean handled = null;
        String fulfilmentMethod = null;
        ReturnsResponse response = api.getReturns(page, handled, fulfilmentMethod);

        // TODO: test validations
    }

    /**
     * Handle a return by rma id
     * <p>
     * Allows the user to handle a return. This can be to either handle an open return, or change the handlingResult of an already handled return. Please refer to the Returns documentation for further details.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void handleReturnTest() throws Exception {
        Long rmaId = null;
        ReturnRequest body = null;
        ProcessStatus response = api.handleReturn(rmaId, body);

        // TODO: test validations
    }

}
