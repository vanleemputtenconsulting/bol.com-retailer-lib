/*
 * v8 - Retailer API
 * The bol.com API for retailers.
 *
 * OpenAPI spec version: 8.x
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package be.datafarmhouse.bol.api;

import be.datafarmhouse.bol.model.*;
import org.junit.Ignore;
import org.junit.Test;

/**
 * API tests for SubscriptionsApi
 */
@Ignore
public class SubscriptionsApiTest {

    private final SubscriptionsApi api = new SubscriptionsApi();


    /**
     * Delete push notification subscription
     * <p>
     * Delete a push notification subscription with the provided id.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void deletePushNotificationSubscriptionTest() throws Exception {
        String subscriptionId = null;
        ProcessStatus response = api.deletePushNotificationSubscription(subscriptionId);

        // TODO: test validations
    }

    /**
     * Get push notification subscription by id
     * <p>
     * Retrieve a configured and active push notification subscription with the provided id.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void getPushNotificationSubscriptionTest() throws Exception {
        String subscriptionId = null;
        SubscriptionResponse response = api.getPushNotificationSubscription(subscriptionId);

        // TODO: test validations
    }

    /**
     * Get push notification subscriptions
     * <p>
     * Retrieve a list of all configured and active push notification subscriptions.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void getPushNotificationSubscriptionsTest() throws Exception {
        SubscriptionsResponse response = api.getPushNotificationSubscriptions();

        // TODO: test validations
    }

    /**
     * Retrieve public keys for push notification signature validation.
     * <p>
     * Retrieve a list of public keys that should be used to validate the signature header for push notifications received from bol.com.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void getSubscriptionKeysTest() throws Exception {
        KeySetResponse response = api.getSubscriptionKeys();

        // TODO: test validations
    }

    /**
     * Create push notification subscription
     * <p>
     * Create a push notification subscription for one (or more) of the available resources. The configured URL has to support https scheme.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void postPushNotificationSubscriptionTest() throws Exception {
        CreateSubscriptionRequest body = null;
        ProcessStatus response = api.postPushNotificationSubscription(body);

        // TODO: test validations
    }

    /**
     * Send test push notification for subscriptions
     * <p>
     * Send a test push notification to all subscriptions for the provided event.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void postTestPushNotificationTest() throws Exception {
        String subscriptionId = null;
        ProcessStatus response = api.postTestPushNotification(subscriptionId);

        // TODO: test validations
    }

    /**
     * Update push notification subscription
     * <p>
     * Update an existing push notification subscription with the supplied id. The configured URL has to support https scheme.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void putPushNotificationSubscriptionTest() throws Exception {
        String subscriptionId = null;
        UpdateSubscriptionRequest body = null;
        ProcessStatus response = api.putPushNotificationSubscription(subscriptionId, body);

        // TODO: test validations
    }

}
