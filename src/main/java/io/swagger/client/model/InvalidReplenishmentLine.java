/*
 * v8 - Retailer API
 * The bol.com API for retailers.
 *
 * OpenAPI spec version: 8.x
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.Objects;

/**
 * InvalidReplenishmentLine
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-04T20:35:33.904+01:00")
public class InvalidReplenishmentLine {
    /**
     * Type of invalid replenishment line, in case the BSKU and/or EAN cannot be determined for this replenishment line.
     */
    @JsonAdapter(TypeEnum.Adapter.class)
    public enum TypeEnum {
        FBB_PRODUCT("UNKNOWN_FBB_PRODUCT"),

        EAN_INVENTORY_RELATION("UNKNOWN_EAN_INVENTORY_RELATION");

        private String value;

        TypeEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static TypeEnum fromValue(String text) {
            for (TypeEnum b : TypeEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<TypeEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public TypeEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return TypeEnum.fromValue(String.valueOf(value));
            }
        }
    }

    @SerializedName("type")
    private TypeEnum type = null;

    @SerializedName("quantityAnnounced")
    private Integer quantityAnnounced = null;

    @SerializedName("quantityReceived")
    private Integer quantityReceived = null;

    @SerializedName("quantityInProgress")
    private Integer quantityInProgress = null;

    @SerializedName("quantityWithGradedState")
    private Integer quantityWithGradedState = null;

    @SerializedName("quantityWithRegularState")
    private Integer quantityWithRegularState = null;

    public InvalidReplenishmentLine type(TypeEnum type) {
        this.type = type;
        return this;
    }

    /**
     * Type of invalid replenishment line, in case the BSKU and/or EAN cannot be determined for this replenishment line.
     *
     * @return type
     **/
    @ApiModelProperty(example = "UNKNOWN_FBB_PRODUCT", required = true, value = "Type of invalid replenishment line, in case the BSKU and/or EAN cannot be determined for this replenishment line.")
    public TypeEnum getType() {
        return type;
    }

    public void setType(TypeEnum type) {
        this.type = type;
    }

    public InvalidReplenishmentLine quantityAnnounced(Integer quantityAnnounced) {
        this.quantityAnnounced = quantityAnnounced;
        return this;
    }

    /**
     * The amount of announced quantity for this replenishment line.
     *
     * @return quantityAnnounced
     **/
    @ApiModelProperty(example = "1", required = true, value = "The amount of announced quantity for this replenishment line.")
    public Integer getQuantityAnnounced() {
        return quantityAnnounced;
    }

    public void setQuantityAnnounced(Integer quantityAnnounced) {
        this.quantityAnnounced = quantityAnnounced;
    }

    public InvalidReplenishmentLine quantityReceived(Integer quantityReceived) {
        this.quantityReceived = quantityReceived;
        return this;
    }

    /**
     * The amount of received quantity for this replenishment line.
     *
     * @return quantityReceived
     **/
    @ApiModelProperty(example = "0", required = true, value = "The amount of received quantity for this replenishment line.")
    public Integer getQuantityReceived() {
        return quantityReceived;
    }

    public void setQuantityReceived(Integer quantityReceived) {
        this.quantityReceived = quantityReceived;
    }

    public InvalidReplenishmentLine quantityInProgress(Integer quantityInProgress) {
        this.quantityInProgress = quantityInProgress;
        return this;
    }

    /**
     * The amount of quantity that is still in progress at the warehouse for this replenishment line.
     *
     * @return quantityInProgress
     **/
    @ApiModelProperty(example = "0", required = true, value = "The amount of quantity that is still in progress at the warehouse for this replenishment line.")
    public Integer getQuantityInProgress() {
        return quantityInProgress;
    }

    public void setQuantityInProgress(Integer quantityInProgress) {
        this.quantityInProgress = quantityInProgress;
    }

    public InvalidReplenishmentLine quantityWithGradedState(Integer quantityWithGradedState) {
        this.quantityWithGradedState = quantityWithGradedState;
        return this;
    }

    /**
     * The quantity within this shipment line that has a graded (unsalable) state.
     *
     * @return quantityWithGradedState
     **/
    @ApiModelProperty(example = "0", required = true, value = "The quantity within this shipment line that has a graded (unsalable) state.")
    public Integer getQuantityWithGradedState() {
        return quantityWithGradedState;
    }

    public void setQuantityWithGradedState(Integer quantityWithGradedState) {
        this.quantityWithGradedState = quantityWithGradedState;
    }

    public InvalidReplenishmentLine quantityWithRegularState(Integer quantityWithRegularState) {
        this.quantityWithRegularState = quantityWithRegularState;
        return this;
    }

    /**
     * The quantity within this shipment line that has a regular (salable) state.
     *
     * @return quantityWithRegularState
     **/
    @ApiModelProperty(example = "0", required = true, value = "The quantity within this shipment line that has a regular (salable) state.")
    public Integer getQuantityWithRegularState() {
        return quantityWithRegularState;
    }

    public void setQuantityWithRegularState(Integer quantityWithRegularState) {
        this.quantityWithRegularState = quantityWithRegularState;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        InvalidReplenishmentLine invalidReplenishmentLine = (InvalidReplenishmentLine) o;
        return Objects.equals(this.type, invalidReplenishmentLine.type) &&
                Objects.equals(this.quantityAnnounced, invalidReplenishmentLine.quantityAnnounced) &&
                Objects.equals(this.quantityReceived, invalidReplenishmentLine.quantityReceived) &&
                Objects.equals(this.quantityInProgress, invalidReplenishmentLine.quantityInProgress) &&
                Objects.equals(this.quantityWithGradedState, invalidReplenishmentLine.quantityWithGradedState) &&
                Objects.equals(this.quantityWithRegularState, invalidReplenishmentLine.quantityWithRegularState);
    }

    @Override
    public int hashCode() {
        return Objects.hash(type, quantityAnnounced, quantityReceived, quantityInProgress, quantityWithGradedState, quantityWithRegularState);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class InvalidReplenishmentLine {\n");

        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    quantityAnnounced: ").append(toIndentedString(quantityAnnounced)).append("\n");
        sb.append("    quantityReceived: ").append(toIndentedString(quantityReceived)).append("\n");
        sb.append("    quantityInProgress: ").append(toIndentedString(quantityInProgress)).append("\n");
        sb.append("    quantityWithGradedState: ").append(toIndentedString(quantityWithGradedState)).append("\n");
        sb.append("    quantityWithRegularState: ").append(toIndentedString(quantityWithRegularState)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

