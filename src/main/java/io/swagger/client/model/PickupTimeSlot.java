/*
 * v8 - Retailer API
 * The bol.com API for retailers.
 *
 * OpenAPI spec version: 8.x
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

import java.util.Objects;

/**
 * PickupTimeSlot
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-04T20:35:33.904+01:00")
public class PickupTimeSlot {
    @SerializedName("fromDateTime")
    private OffsetDateTime fromDateTime = null;

    @SerializedName("untilDateTime")
    private OffsetDateTime untilDateTime = null;

    public PickupTimeSlot fromDateTime(OffsetDateTime fromDateTime) {
        this.fromDateTime = fromDateTime;
        return this;
    }

    /**
     * The available start date and time for the pickup appointment. In ISO 8601 format.
     *
     * @return fromDateTime
     **/
    @ApiModelProperty(example = "2021-01-01T09:00:00+01:00", required = true, value = "The available start date and time for the pickup appointment. In ISO 8601 format.")
    public OffsetDateTime getFromDateTime() {
        return fromDateTime;
    }

    public void setFromDateTime(OffsetDateTime fromDateTime) {
        this.fromDateTime = fromDateTime;
    }

    public PickupTimeSlot untilDateTime(OffsetDateTime untilDateTime) {
        this.untilDateTime = untilDateTime;
        return this;
    }

    /**
     * The available end date and time for the pickup appointment. In ISO 8601 format.
     *
     * @return untilDateTime
     **/
    @ApiModelProperty(example = "2021-01-01T10:00:00+01:00", required = true, value = "The available end date and time for the pickup appointment. In ISO 8601 format.")
    public OffsetDateTime getUntilDateTime() {
        return untilDateTime;
    }

    public void setUntilDateTime(OffsetDateTime untilDateTime) {
        this.untilDateTime = untilDateTime;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PickupTimeSlot pickupTimeSlot = (PickupTimeSlot) o;
        return Objects.equals(this.fromDateTime, pickupTimeSlot.fromDateTime) &&
                Objects.equals(this.untilDateTime, pickupTimeSlot.untilDateTime);
    }

    @Override
    public int hashCode() {
        return Objects.hash(fromDateTime, untilDateTime);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class PickupTimeSlot {\n");

        sb.append("    fromDateTime: ").append(toIndentedString(fromDateTime)).append("\n");
        sb.append("    untilDateTime: ").append(toIndentedString(untilDateTime)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

