/*
 * v8 - Retailer API
 * The bol.com API for retailers.
 *
 * OpenAPI spec version: 8.x
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * The reason why the customer returned this product.
 */
@ApiModel(description = "The reason why the customer returned this product.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-04T20:35:33.904+01:00")
public class ReturnReason {
    @SerializedName("mainReason")
    private String mainReason = null;

    @SerializedName("detailedReason")
    private String detailedReason = null;

    @SerializedName("customerComments")
    private String customerComments = null;

    public ReturnReason mainReason(String mainReason) {
        this.mainReason = mainReason;
        return this;
    }

    /**
     * The main reason describing why the customer returned this product.
     *
     * @return mainReason
     **/
    @ApiModelProperty(example = "Niet naar verwachting", value = "The main reason describing why the customer returned this product.")
    public String getMainReason() {
        return mainReason;
    }

    public void setMainReason(String mainReason) {
        this.mainReason = mainReason;
    }

    public ReturnReason detailedReason(String detailedReason) {
        this.detailedReason = detailedReason;
        return this;
    }

    /**
     * The sub reason describing why the customer returned this product in more detail.
     *
     * @return detailedReason
     **/
    @ApiModelProperty(example = "Niet naar verwachting", value = "The sub reason describing why the customer returned this product in more detail.")
    public String getDetailedReason() {
        return detailedReason;
    }

    public void setDetailedReason(String detailedReason) {
        this.detailedReason = detailedReason;
    }

    public ReturnReason customerComments(String customerComments) {
        this.customerComments = customerComments;
        return this;
    }

    /**
     * Additional details from the customer as to why this item was returned.
     *
     * @return customerComments
     **/
    @ApiModelProperty(example = "Lorem Ipsum", value = "Additional details from the customer as to why this item was returned.")
    public String getCustomerComments() {
        return customerComments;
    }

    public void setCustomerComments(String customerComments) {
        this.customerComments = customerComments;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ReturnReason returnReason = (ReturnReason) o;
        return Objects.equals(this.mainReason, returnReason.mainReason) &&
                Objects.equals(this.detailedReason, returnReason.detailedReason) &&
                Objects.equals(this.customerComments, returnReason.customerComments);
    }

    @Override
    public int hashCode() {
        return Objects.hash(mainReason, detailedReason, customerComments);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ReturnReason {\n");

        sb.append("    mainReason: ").append(toIndentedString(mainReason)).append("\n");
        sb.append("    detailedReason: ").append(toIndentedString(detailedReason)).append("\n");
        sb.append("    customerComments: ").append(toIndentedString(customerComments)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

