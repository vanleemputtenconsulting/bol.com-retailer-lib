/*
 * v8 - Retailer API
 * The bol.com API for retailers.
 *
 * OpenAPI spec version: 8.x
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

import java.util.Objects;

/**
 * An order item.
 */
@ApiModel(description = "An order item.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-04T20:35:33.904+01:00")
public class ReducedOrderItem {
    @SerializedName("orderItemId")
    private String orderItemId = null;

    @SerializedName("ean")
    private String ean = null;

    @SerializedName("fulfilmentMethod")
    private String fulfilmentMethod = null;

    @SerializedName("fulfilmentStatus")
    private String fulfilmentStatus = null;

    @SerializedName("quantity")
    private Integer quantity = null;

    @SerializedName("quantityShipped")
    private Integer quantityShipped = null;

    @SerializedName("quantityCancelled")
    private Integer quantityCancelled = null;

    @SerializedName("cancellationRequest")
    private Boolean cancellationRequest = null;

    @SerializedName("latestChangedDateTime")
    private OffsetDateTime latestChangedDateTime = null;

    public ReducedOrderItem orderItemId(String orderItemId) {
        this.orderItemId = orderItemId;
        return this;
    }

    /**
     * The id for the order item. One order can have multiple order items, but the list can only take one item.
     *
     * @return orderItemId
     **/
    @ApiModelProperty(example = "2012345678", required = true, value = "The id for the order item. One order can have multiple order items, but the list can only take one item.")
    public String getOrderItemId() {
        return orderItemId;
    }

    public void setOrderItemId(String orderItemId) {
        this.orderItemId = orderItemId;
    }

    public ReducedOrderItem ean(String ean) {
        this.ean = ean;
        return this;
    }

    /**
     * The EAN number associated with this product.
     *
     * @return ean
     **/
    @ApiModelProperty(example = "0000007740404", required = true, value = "The EAN number associated with this product.")
    public String getEan() {
        return ean;
    }

    public void setEan(String ean) {
        this.ean = ean;
    }

    public ReducedOrderItem fulfilmentMethod(String fulfilmentMethod) {
        this.fulfilmentMethod = fulfilmentMethod;
        return this;
    }

    /**
     * The fulfilment method. Fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB).
     *
     * @return fulfilmentMethod
     **/
    @ApiModelProperty(example = "FBR", required = true, value = "The fulfilment method. Fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB).")
    public String getFulfilmentMethod() {
        return fulfilmentMethod;
    }

    public void setFulfilmentMethod(String fulfilmentMethod) {
        this.fulfilmentMethod = fulfilmentMethod;
    }

    public ReducedOrderItem fulfilmentStatus(String fulfilmentStatus) {
        this.fulfilmentStatus = fulfilmentStatus;
        return this;
    }

    /**
     * To filter on order status. You can filter on either all orders independent from their status, open orders (excluding shipped and cancelled orders), and shipped orders.
     *
     * @return fulfilmentStatus
     **/
    @ApiModelProperty(example = "OPEN", required = true, value = "To filter on order status. You can filter on either all orders independent from their status, open orders (excluding shipped and cancelled orders), and shipped orders.")
    public String getFulfilmentStatus() {
        return fulfilmentStatus;
    }

    public void setFulfilmentStatus(String fulfilmentStatus) {
        this.fulfilmentStatus = fulfilmentStatus;
    }

    public ReducedOrderItem quantity(Integer quantity) {
        this.quantity = quantity;
        return this;
    }

    /**
     * Amount of ordered products for this order item id.
     *
     * @return quantity
     **/
    @ApiModelProperty(example = "10", required = true, value = "Amount of ordered products for this order item id.")
    public Integer getQuantity() {
        return quantity;
    }

    public void setQuantity(Integer quantity) {
        this.quantity = quantity;
    }

    public ReducedOrderItem quantityShipped(Integer quantityShipped) {
        this.quantityShipped = quantityShipped;
        return this;
    }

    /**
     * Amount of shipped products for this order item id.
     *
     * @return quantityShipped
     **/
    @ApiModelProperty(example = "10", required = true, value = "Amount of shipped products for this order item id.")
    public Integer getQuantityShipped() {
        return quantityShipped;
    }

    public void setQuantityShipped(Integer quantityShipped) {
        this.quantityShipped = quantityShipped;
    }

    public ReducedOrderItem quantityCancelled(Integer quantityCancelled) {
        this.quantityCancelled = quantityCancelled;
        return this;
    }

    /**
     * Amount of cancelled products for this order item id.
     *
     * @return quantityCancelled
     **/
    @ApiModelProperty(example = "0", required = true, value = "Amount of cancelled products for this order item id.")
    public Integer getQuantityCancelled() {
        return quantityCancelled;
    }

    public void setQuantityCancelled(Integer quantityCancelled) {
        this.quantityCancelled = quantityCancelled;
    }

    public ReducedOrderItem cancellationRequest(Boolean cancellationRequest) {
        this.cancellationRequest = cancellationRequest;
        return this;
    }

    /**
     * Indicates whether the order was cancelled on request of the customer before the retailer has shipped it.
     *
     * @return cancellationRequest
     **/
    @ApiModelProperty(example = "false", required = true, value = "Indicates whether the order was cancelled on request of the customer before the retailer has shipped it.")
    public Boolean isCancellationRequest() {
        return cancellationRequest;
    }

    public void setCancellationRequest(Boolean cancellationRequest) {
        this.cancellationRequest = cancellationRequest;
    }

    public ReducedOrderItem latestChangedDateTime(OffsetDateTime latestChangedDateTime) {
        this.latestChangedDateTime = latestChangedDateTime;
        return this;
    }

    /**
     * The date and time in ISO 8601 format when the orderItem was last changed.
     *
     * @return latestChangedDateTime
     **/
    @ApiModelProperty(example = "2017-02-09T12:39:48+01:00", required = true, value = "The date and time in ISO 8601 format when the orderItem was last changed.")
    public OffsetDateTime getLatestChangedDateTime() {
        return latestChangedDateTime;
    }

    public void setLatestChangedDateTime(OffsetDateTime latestChangedDateTime) {
        this.latestChangedDateTime = latestChangedDateTime;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ReducedOrderItem reducedOrderItem = (ReducedOrderItem) o;
        return Objects.equals(this.orderItemId, reducedOrderItem.orderItemId) &&
                Objects.equals(this.ean, reducedOrderItem.ean) &&
                Objects.equals(this.fulfilmentMethod, reducedOrderItem.fulfilmentMethod) &&
                Objects.equals(this.fulfilmentStatus, reducedOrderItem.fulfilmentStatus) &&
                Objects.equals(this.quantity, reducedOrderItem.quantity) &&
                Objects.equals(this.quantityShipped, reducedOrderItem.quantityShipped) &&
                Objects.equals(this.quantityCancelled, reducedOrderItem.quantityCancelled) &&
                Objects.equals(this.cancellationRequest, reducedOrderItem.cancellationRequest) &&
                Objects.equals(this.latestChangedDateTime, reducedOrderItem.latestChangedDateTime);
    }

    @Override
    public int hashCode() {
        return Objects.hash(orderItemId, ean, fulfilmentMethod, fulfilmentStatus, quantity, quantityShipped, quantityCancelled, cancellationRequest, latestChangedDateTime);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ReducedOrderItem {\n");

        sb.append("    orderItemId: ").append(toIndentedString(orderItemId)).append("\n");
        sb.append("    ean: ").append(toIndentedString(ean)).append("\n");
        sb.append("    fulfilmentMethod: ").append(toIndentedString(fulfilmentMethod)).append("\n");
        sb.append("    fulfilmentStatus: ").append(toIndentedString(fulfilmentStatus)).append("\n");
        sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
        sb.append("    quantityShipped: ").append(toIndentedString(quantityShipped)).append("\n");
        sb.append("    quantityCancelled: ").append(toIndentedString(quantityCancelled)).append("\n");
        sb.append("    cancellationRequest: ").append(toIndentedString(cancellationRequest)).append("\n");
        sb.append("    latestChangedDateTime: ").append(toIndentedString(latestChangedDateTime)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

