/*
 * v8 - Retailer API
 * The bol.com API for retailers.
 *
 * OpenAPI spec version: 8.x
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * The score for this measurement. In case there are no scores for an indicator, this element is omitted from the response.
 */
@ApiModel(description = "The score for this measurement. In case there are no scores for an indicator, this element is omitted from the response.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-04T20:35:33.904+01:00")
public class Score {
    @SerializedName("conforms")
    private Boolean conforms = null;

    @SerializedName("numerator")
    private Integer numerator = null;

    @SerializedName("denominator")
    private Integer denominator = null;

    @SerializedName("value")
    private Float value = null;

    @SerializedName("distanceToNorm")
    private Float distanceToNorm = null;

    public Score conforms(Boolean conforms) {
        this.conforms = conforms;
        return this;
    }

    /**
     * Indicates whether the score conforms to the bol.com service norm or not.
     *
     * @return conforms
     **/
    @ApiModelProperty(example = "true", required = true, value = "Indicates whether the score conforms to the bol.com service norm or not.")
    public Boolean isConforms() {
        return conforms;
    }

    public void setConforms(Boolean conforms) {
        this.conforms = conforms;
    }

    public Score numerator(Integer numerator) {
        this.numerator = numerator;
        return this;
    }

    /**
     * The top part of the fraction (above the line). This usually is the smaller number compared to the denominator.
     *
     * @return numerator
     **/
    @ApiModelProperty(example = "5", required = true, value = "The top part of the fraction (above the line). This usually is the smaller number compared to the denominator.")
    public Integer getNumerator() {
        return numerator;
    }

    public void setNumerator(Integer numerator) {
        this.numerator = numerator;
    }

    public Score denominator(Integer denominator) {
        this.denominator = denominator;
        return this;
    }

    /**
     * The lower part of the fraction (below the line). This usually is the larger number compared to the the numerator.
     *
     * @return denominator
     **/
    @ApiModelProperty(example = "10", required = true, value = "The lower part of the fraction (below the line). This usually is the larger number compared to the the numerator.")
    public Integer getDenominator() {
        return denominator;
    }

    public void setDenominator(Integer denominator) {
        this.denominator = denominator;
    }

    public Score value(Float value) {
        this.value = value;
        return this;
    }

    /**
     * The score for this measurement (denominator divided by the numerator).
     *
     * @return value
     **/
    @ApiModelProperty(example = "0.5", required = true, value = "The score for this measurement (denominator divided by the numerator).")
    public Float getValue() {
        return value;
    }

    public void setValue(Float value) {
        this.value = value;
    }

    public Score distanceToNorm(Float distanceToNorm) {
        this.distanceToNorm = distanceToNorm;
        return this;
    }

    /**
     * The difference between the score and the bol.com service norm.
     *
     * @return distanceToNorm
     **/
    @ApiModelProperty(example = "0.1", required = true, value = "The difference between the score and the bol.com service norm.")
    public Float getDistanceToNorm() {
        return distanceToNorm;
    }

    public void setDistanceToNorm(Float distanceToNorm) {
        this.distanceToNorm = distanceToNorm;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Score score = (Score) o;
        return Objects.equals(this.conforms, score.conforms) &&
                Objects.equals(this.numerator, score.numerator) &&
                Objects.equals(this.denominator, score.denominator) &&
                Objects.equals(this.value, score.value) &&
                Objects.equals(this.distanceToNorm, score.distanceToNorm);
    }

    @Override
    public int hashCode() {
        return Objects.hash(conforms, numerator, denominator, value, distanceToNorm);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Score {\n");

        sb.append("    conforms: ").append(toIndentedString(conforms)).append("\n");
        sb.append("    numerator: ").append(toIndentedString(numerator)).append("\n");
        sb.append("    denominator: ").append(toIndentedString(denominator)).append("\n");
        sb.append("    value: ").append(toIndentedString(value)).append("\n");
        sb.append("    distanceToNorm: ").append(toIndentedString(distanceToNorm)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

