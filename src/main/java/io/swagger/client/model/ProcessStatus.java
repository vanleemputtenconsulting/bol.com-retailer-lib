/*
 * v8 - Retailer API
 * The bol.com API for retailers.
 *
 * OpenAPI spec version: 8.x
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * ProcessStatus
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-04T20:35:33.904+01:00")
public class ProcessStatus {
    @SerializedName("processStatusId")
    private String processStatusId = null;

    @SerializedName("entityId")
    private String entityId = null;

    @SerializedName("eventType")
    private String eventType = null;

    @SerializedName("description")
    private String description = null;

    /**
     * Status of the action being processed.
     */
    @JsonAdapter(StatusEnum.Adapter.class)
    public enum StatusEnum {
        PENDING("PENDING"),

        SUCCESS("SUCCESS"),

        FAILURE("FAILURE"),

        TIMEOUT("TIMEOUT");

        private String value;

        StatusEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static StatusEnum fromValue(String text) {
            for (StatusEnum b : StatusEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<StatusEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public StatusEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return StatusEnum.fromValue(String.valueOf(value));
            }
        }
    }

    @SerializedName("status")
    private StatusEnum status = null;

    @SerializedName("errorMessage")
    private String errorMessage = null;

    @SerializedName("createTimestamp")
    private OffsetDateTime createTimestamp = null;

    @SerializedName("links")
    private List<Link> links = new ArrayList<Link>();

    public ProcessStatus processStatusId(String processStatusId) {
        this.processStatusId = processStatusId;
        return this;
    }

    /**
     * The process status id.
     *
     * @return processStatusId
     **/
    @ApiModelProperty(example = "1234567", value = "The process status id.")
    public String getProcessStatusId() {
        return processStatusId;
    }

    public void setProcessStatusId(String processStatusId) {
        this.processStatusId = processStatusId;
    }

    public ProcessStatus entityId(String entityId) {
        this.entityId = entityId;
        return this;
    }

    /**
     * The id of the object being processed. For example, in case of a shipment process id, you will receive the id of the order item being processed.
     *
     * @return entityId
     **/
    @ApiModelProperty(example = "987654321", value = "The id of the object being processed. For example, in case of a shipment process id, you will receive the id of the order item being processed.")
    public String getEntityId() {
        return entityId;
    }

    public void setEntityId(String entityId) {
        this.entityId = entityId;
    }

    public ProcessStatus eventType(String eventType) {
        this.eventType = eventType;
        return this;
    }

    /**
     * Name of the requested action that is being processed.
     *
     * @return eventType
     **/
    @ApiModelProperty(example = "CONFIRM_SHIPMENT", required = true, value = "Name of the requested action that is being processed.")
    public String getEventType() {
        return eventType;
    }

    public void setEventType(String eventType) {
        this.eventType = eventType;
    }

    public ProcessStatus description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Describes the action that is being processed.
     *
     * @return description
     **/
    @ApiModelProperty(example = "Example process status description for processing 987654321.", required = true, value = "Describes the action that is being processed.")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public ProcessStatus status(StatusEnum status) {
        this.status = status;
        return this;
    }

    /**
     * Status of the action being processed.
     *
     * @return status
     **/
    @ApiModelProperty(example = "SUCCESS", required = true, value = "Status of the action being processed.")
    public StatusEnum getStatus() {
        return status;
    }

    public void setStatus(StatusEnum status) {
        this.status = status;
    }

    public ProcessStatus errorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
        return this;
    }

    /**
     * Shows error message if applicable.
     *
     * @return errorMessage
     **/
    @ApiModelProperty(example = "Example process status error message.", value = "Shows error message if applicable.")
    public String getErrorMessage() {
        return errorMessage;
    }

    public void setErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
    }

    public ProcessStatus createTimestamp(OffsetDateTime createTimestamp) {
        this.createTimestamp = createTimestamp;
        return this;
    }

    /**
     * Time of creation of the response.
     *
     * @return createTimestamp
     **/
    @ApiModelProperty(example = "2018-11-14T09:34:41+01:00", required = true, value = "Time of creation of the response.")
    public OffsetDateTime getCreateTimestamp() {
        return createTimestamp;
    }

    public void setCreateTimestamp(OffsetDateTime createTimestamp) {
        this.createTimestamp = createTimestamp;
    }

    public ProcessStatus links(List<Link> links) {
        this.links = links;
        return this;
    }

    public ProcessStatus addLinksItem(Link linksItem) {
        this.links.add(linksItem);
        return this;
    }

    /**
     * Lists available actions applicable to this endpoint.
     *
     * @return links
     **/
    @ApiModelProperty(required = true, value = "Lists available actions applicable to this endpoint.")
    public List<Link> getLinks() {
        return links;
    }

    public void setLinks(List<Link> links) {
        this.links = links;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ProcessStatus processStatus = (ProcessStatus) o;
        return Objects.equals(this.processStatusId, processStatus.processStatusId) &&
                Objects.equals(this.entityId, processStatus.entityId) &&
                Objects.equals(this.eventType, processStatus.eventType) &&
                Objects.equals(this.description, processStatus.description) &&
                Objects.equals(this.status, processStatus.status) &&
                Objects.equals(this.errorMessage, processStatus.errorMessage) &&
                Objects.equals(this.createTimestamp, processStatus.createTimestamp) &&
                Objects.equals(this.links, processStatus.links);
    }

    @Override
    public int hashCode() {
        return Objects.hash(processStatusId, entityId, eventType, description, status, errorMessage, createTimestamp, links);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ProcessStatus {\n");

        sb.append("    processStatusId: ").append(toIndentedString(processStatusId)).append("\n");
        sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
        sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
        sb.append("    createTimestamp: ").append(toIndentedString(createTimestamp)).append("\n");
        sb.append("    links: ").append(toIndentedString(links)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

