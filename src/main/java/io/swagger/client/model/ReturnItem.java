/*
 * v8 - Retailer API
 * The bol.com API for retailers.
 *
 * OpenAPI spec version: 8.x
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * ReturnItem
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-04T20:35:33.904+01:00")
public class ReturnItem {
    @SerializedName("rmaId")
    private String rmaId = null;

    @SerializedName("orderId")
    private String orderId = null;

    @SerializedName("ean")
    private String ean = null;

    @SerializedName("title")
    private String title = null;

    @SerializedName("expectedQuantity")
    private Integer expectedQuantity = null;

    @SerializedName("returnReason")
    private ReturnReason returnReason = null;

    @SerializedName("trackAndTrace")
    private String trackAndTrace = null;

    @SerializedName("transporterName")
    private String transporterName = null;

    @SerializedName("handled")
    private Boolean handled = null;

    @SerializedName("processingResults")
    private List<ReturnProcessingResult> processingResults = new ArrayList<ReturnProcessingResult>();

    @SerializedName("customerDetails")
    private CustomerDetails customerDetails = null;

    public ReturnItem rmaId(String rmaId) {
        this.rmaId = rmaId;
        return this;
    }

    /**
     * The RMA (Return Merchandise Authorization) identifier of the return.
     *
     * @return rmaId
     **/
    @ApiModelProperty(example = "31234567", required = true, value = "The RMA (Return Merchandise Authorization) identifier of the return.")
    public String getRmaId() {
        return rmaId;
    }

    public void setRmaId(String rmaId) {
        this.rmaId = rmaId;
    }

    public ReturnItem orderId(String orderId) {
        this.orderId = orderId;
        return this;
    }

    /**
     * The id of the customer order this return item is in.
     *
     * @return orderId
     **/
    @ApiModelProperty(example = "4012345678", required = true, value = "The id of the customer order this return item is in.")
    public String getOrderId() {
        return orderId;
    }

    public void setOrderId(String orderId) {
        this.orderId = orderId;
    }

    public ReturnItem ean(String ean) {
        this.ean = ean;
        return this;
    }

    /**
     * The EAN number associated with this product.
     *
     * @return ean
     **/
    @ApiModelProperty(example = "9789076174082", required = true, value = "The EAN number associated with this product.")
    public String getEan() {
        return ean;
    }

    public void setEan(String ean) {
        this.ean = ean;
    }

    public ReturnItem title(String title) {
        this.title = title;
        return this;
    }

    /**
     * The product title.
     *
     * @return title
     **/
    @ApiModelProperty(example = "Harry Potter en de steen der wijzen", required = true, value = "The product title.")
    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public ReturnItem expectedQuantity(Integer expectedQuantity) {
        this.expectedQuantity = expectedQuantity;
        return this;
    }

    /**
     * The quantity that is expected to be returned by the customer. Note: this can be greater than 1 in case the customer ordered a quantity greater than 1 of the same product in the same customer order.
     *
     * @return expectedQuantity
     **/
    @ApiModelProperty(example = "1", required = true, value = "The quantity that is expected to be returned by the customer. Note: this can be greater than 1 in case the customer ordered a quantity greater than 1 of the same product in the same customer order.")
    public Integer getExpectedQuantity() {
        return expectedQuantity;
    }

    public void setExpectedQuantity(Integer expectedQuantity) {
        this.expectedQuantity = expectedQuantity;
    }

    public ReturnItem returnReason(ReturnReason returnReason) {
        this.returnReason = returnReason;
        return this;
    }

    /**
     * Get returnReason
     *
     * @return returnReason
     **/
    @ApiModelProperty(value = "")
    public ReturnReason getReturnReason() {
        return returnReason;
    }

    public void setReturnReason(ReturnReason returnReason) {
        this.returnReason = returnReason;
    }

    public ReturnItem trackAndTrace(String trackAndTrace) {
        this.trackAndTrace = trackAndTrace;
        return this;
    }

    /**
     * The track and trace code that is associated with this transport.
     *
     * @return trackAndTrace
     **/
    @ApiModelProperty(example = "3SBOL0987654321", value = "The track and trace code that is associated with this transport.")
    public String getTrackAndTrace() {
        return trackAndTrace;
    }

    public void setTrackAndTrace(String trackAndTrace) {
        this.trackAndTrace = trackAndTrace;
    }

    public ReturnItem transporterName(String transporterName) {
        this.transporterName = transporterName;
        return this;
    }

    /**
     * The name of the transporter.
     *
     * @return transporterName
     **/
    @ApiModelProperty(example = "PostNL", value = "The name of the transporter.")
    public String getTransporterName() {
        return transporterName;
    }

    public void setTransporterName(String transporterName) {
        this.transporterName = transporterName;
    }

    public ReturnItem handled(Boolean handled) {
        this.handled = handled;
        return this;
    }

    /**
     * Indicates if this return item has been handled (by the retailer).
     *
     * @return handled
     **/
    @ApiModelProperty(example = "true", required = true, value = "Indicates if this return item has been handled (by the retailer).")
    public Boolean isHandled() {
        return handled;
    }

    public void setHandled(Boolean handled) {
        this.handled = handled;
    }

    public ReturnItem processingResults(List<ReturnProcessingResult> processingResults) {
        this.processingResults = processingResults;
        return this;
    }

    public ReturnItem addProcessingResultsItem(ReturnProcessingResult processingResultsItem) {
        this.processingResults.add(processingResultsItem);
        return this;
    }

    /**
     * Get processingResults
     *
     * @return processingResults
     **/
    @ApiModelProperty(required = true, value = "")
    public List<ReturnProcessingResult> getProcessingResults() {
        return processingResults;
    }

    public void setProcessingResults(List<ReturnProcessingResult> processingResults) {
        this.processingResults = processingResults;
    }

    public ReturnItem customerDetails(CustomerDetails customerDetails) {
        this.customerDetails = customerDetails;
        return this;
    }

    /**
     * Get customerDetails
     *
     * @return customerDetails
     **/
    @ApiModelProperty(required = true, value = "")
    public CustomerDetails getCustomerDetails() {
        return customerDetails;
    }

    public void setCustomerDetails(CustomerDetails customerDetails) {
        this.customerDetails = customerDetails;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ReturnItem returnItem = (ReturnItem) o;
        return Objects.equals(this.rmaId, returnItem.rmaId) &&
                Objects.equals(this.orderId, returnItem.orderId) &&
                Objects.equals(this.ean, returnItem.ean) &&
                Objects.equals(this.title, returnItem.title) &&
                Objects.equals(this.expectedQuantity, returnItem.expectedQuantity) &&
                Objects.equals(this.returnReason, returnItem.returnReason) &&
                Objects.equals(this.trackAndTrace, returnItem.trackAndTrace) &&
                Objects.equals(this.transporterName, returnItem.transporterName) &&
                Objects.equals(this.handled, returnItem.handled) &&
                Objects.equals(this.processingResults, returnItem.processingResults) &&
                Objects.equals(this.customerDetails, returnItem.customerDetails);
    }

    @Override
    public int hashCode() {
        return Objects.hash(rmaId, orderId, ean, title, expectedQuantity, returnReason, trackAndTrace, transporterName, handled, processingResults, customerDetails);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ReturnItem {\n");

        sb.append("    rmaId: ").append(toIndentedString(rmaId)).append("\n");
        sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
        sb.append("    ean: ").append(toIndentedString(ean)).append("\n");
        sb.append("    title: ").append(toIndentedString(title)).append("\n");
        sb.append("    expectedQuantity: ").append(toIndentedString(expectedQuantity)).append("\n");
        sb.append("    returnReason: ").append(toIndentedString(returnReason)).append("\n");
        sb.append("    trackAndTrace: ").append(toIndentedString(trackAndTrace)).append("\n");
        sb.append("    transporterName: ").append(toIndentedString(transporterName)).append("\n");
        sb.append("    handled: ").append(toIndentedString(handled)).append("\n");
        sb.append("    processingResults: ").append(toIndentedString(processingResults)).append("\n");
        sb.append("    customerDetails: ").append(toIndentedString(customerDetails)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

