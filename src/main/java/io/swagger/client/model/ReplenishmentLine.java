/*
 * v8 - Retailer API
 * The bol.com API for retailers.
 *
 * OpenAPI spec version: 8.x
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.Objects;

/**
 * ReplenishmentLine
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-04T20:35:33.904+01:00")
public class ReplenishmentLine {
    @SerializedName("ean")
    private String ean = null;

    /**
     * The state of the line indicating whether this line was announced within this replenishment.
     */
    @JsonAdapter(LineStateEnum.Adapter.class)
    public enum LineStateEnum {
        ANNOUNCED("ANNOUNCED"),

        UNANNOUNCED("UNANNOUNCED"),

        UNKNOWN("UNKNOWN");

        private String value;

        LineStateEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static LineStateEnum fromValue(String text) {
            for (LineStateEnum b : LineStateEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<LineStateEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final LineStateEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public LineStateEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return LineStateEnum.fromValue(String.valueOf(value));
            }
        }
    }

    @SerializedName("lineState")
    private LineStateEnum lineState = null;

    @SerializedName("quantityAnnounced")
    private Integer quantityAnnounced = null;

    @SerializedName("quantityReceived")
    private Integer quantityReceived = null;

    @SerializedName("quantityInProgress")
    private Integer quantityInProgress = null;

    @SerializedName("quantityWithGradedState")
    private Integer quantityWithGradedState = null;

    @SerializedName("quantityWithRegularState")
    private Integer quantityWithRegularState = null;

    public ReplenishmentLine ean(String ean) {
        this.ean = ean;
        return this;
    }

    /**
     * The EAN number associated with this product.
     *
     * @return ean
     **/
    @ApiModelProperty(example = "0000007740404", required = true, value = "The EAN number associated with this product.")
    public String getEan() {
        return ean;
    }

    public void setEan(String ean) {
        this.ean = ean;
    }

    public ReplenishmentLine lineState(LineStateEnum lineState) {
        this.lineState = lineState;
        return this;
    }

    /**
     * The state of the line indicating whether this line was announced within this replenishment.
     *
     * @return lineState
     **/
    @ApiModelProperty(example = "ANNOUNCED", required = true, value = "The state of the line indicating whether this line was announced within this replenishment.")
    public LineStateEnum getLineState() {
        return lineState;
    }

    public void setLineState(LineStateEnum lineState) {
        this.lineState = lineState;
    }

    public ReplenishmentLine quantityAnnounced(Integer quantityAnnounced) {
        this.quantityAnnounced = quantityAnnounced;
        return this;
    }

    /**
     * The amount of announced quantity for this replenishment line.
     *
     * @return quantityAnnounced
     **/
    @ApiModelProperty(example = "1", required = true, value = "The amount of announced quantity for this replenishment line.")
    public Integer getQuantityAnnounced() {
        return quantityAnnounced;
    }

    public void setQuantityAnnounced(Integer quantityAnnounced) {
        this.quantityAnnounced = quantityAnnounced;
    }

    public ReplenishmentLine quantityReceived(Integer quantityReceived) {
        this.quantityReceived = quantityReceived;
        return this;
    }

    /**
     * The amount of received quantity for this replenishment line.
     *
     * @return quantityReceived
     **/
    @ApiModelProperty(example = "0", required = true, value = "The amount of received quantity for this replenishment line.")
    public Integer getQuantityReceived() {
        return quantityReceived;
    }

    public void setQuantityReceived(Integer quantityReceived) {
        this.quantityReceived = quantityReceived;
    }

    public ReplenishmentLine quantityInProgress(Integer quantityInProgress) {
        this.quantityInProgress = quantityInProgress;
        return this;
    }

    /**
     * The amount of quantity that is still in progress at the warehouse for this replenishment line.
     *
     * @return quantityInProgress
     **/
    @ApiModelProperty(example = "0", required = true, value = "The amount of quantity that is still in progress at the warehouse for this replenishment line.")
    public Integer getQuantityInProgress() {
        return quantityInProgress;
    }

    public void setQuantityInProgress(Integer quantityInProgress) {
        this.quantityInProgress = quantityInProgress;
    }

    public ReplenishmentLine quantityWithGradedState(Integer quantityWithGradedState) {
        this.quantityWithGradedState = quantityWithGradedState;
        return this;
    }

    /**
     * The quantity within this shipment line that has a graded (unsalable) state.
     *
     * @return quantityWithGradedState
     **/
    @ApiModelProperty(example = "0", required = true, value = "The quantity within this shipment line that has a graded (unsalable) state.")
    public Integer getQuantityWithGradedState() {
        return quantityWithGradedState;
    }

    public void setQuantityWithGradedState(Integer quantityWithGradedState) {
        this.quantityWithGradedState = quantityWithGradedState;
    }

    public ReplenishmentLine quantityWithRegularState(Integer quantityWithRegularState) {
        this.quantityWithRegularState = quantityWithRegularState;
        return this;
    }

    /**
     * The quantity within this shipment line that has a regular (salable) state.
     *
     * @return quantityWithRegularState
     **/
    @ApiModelProperty(example = "0", required = true, value = "The quantity within this shipment line that has a regular (salable) state.")
    public Integer getQuantityWithRegularState() {
        return quantityWithRegularState;
    }

    public void setQuantityWithRegularState(Integer quantityWithRegularState) {
        this.quantityWithRegularState = quantityWithRegularState;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ReplenishmentLine replenishmentLine = (ReplenishmentLine) o;
        return Objects.equals(this.ean, replenishmentLine.ean) &&
                Objects.equals(this.lineState, replenishmentLine.lineState) &&
                Objects.equals(this.quantityAnnounced, replenishmentLine.quantityAnnounced) &&
                Objects.equals(this.quantityReceived, replenishmentLine.quantityReceived) &&
                Objects.equals(this.quantityInProgress, replenishmentLine.quantityInProgress) &&
                Objects.equals(this.quantityWithGradedState, replenishmentLine.quantityWithGradedState) &&
                Objects.equals(this.quantityWithRegularState, replenishmentLine.quantityWithRegularState);
    }

    @Override
    public int hashCode() {
        return Objects.hash(ean, lineState, quantityAnnounced, quantityReceived, quantityInProgress, quantityWithGradedState, quantityWithRegularState);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ReplenishmentLine {\n");

        sb.append("    ean: ").append(toIndentedString(ean)).append("\n");
        sb.append("    lineState: ").append(toIndentedString(lineState)).append("\n");
        sb.append("    quantityAnnounced: ").append(toIndentedString(quantityAnnounced)).append("\n");
        sb.append("    quantityReceived: ").append(toIndentedString(quantityReceived)).append("\n");
        sb.append("    quantityInProgress: ").append(toIndentedString(quantityInProgress)).append("\n");
        sb.append("    quantityWithGradedState: ").append(toIndentedString(quantityWithGradedState)).append("\n");
        sb.append("    quantityWithRegularState: ").append(toIndentedString(quantityWithRegularState)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

