/*
 * v8 - Retailer API
 * The bol.com API for retailers.
 *
 * OpenAPI spec version: 8.x
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

import java.io.IOException;
import java.util.Objects;

/**
 * StateTransition
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-04T20:35:33.904+01:00")
public class StateTransition {
    /**
     * Indicates the state of this replenishment order.
     */
    @JsonAdapter(StateEnum.Adapter.class)
    public enum StateEnum {
        DRAFT("DRAFT"),

        ANNOUNCED("ANNOUNCED"),

        IN_TRANSIT("IN_TRANSIT"),

        ARRIVED_AT_WH("ARRIVED_AT_WH"),

        IN_PROGRESS_AT_WH("IN_PROGRESS_AT_WH"),

        CANCELLED("CANCELLED"),

        DONE("DONE");

        private String value;

        StateEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static StateEnum fromValue(String text) {
            for (StateEnum b : StateEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<StateEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public StateEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return StateEnum.fromValue(String.valueOf(value));
            }
        }
    }

    @SerializedName("state")
    private StateEnum state = null;

    @SerializedName("stateDateTime")
    private OffsetDateTime stateDateTime = null;

    public StateTransition state(StateEnum state) {
        this.state = state;
        return this;
    }

    /**
     * Indicates the state of this replenishment order.
     *
     * @return state
     **/
    @ApiModelProperty(example = "ANNOUNCED", required = true, value = "Indicates the state of this replenishment order.")
    public StateEnum getState() {
        return state;
    }

    public void setState(StateEnum state) {
        this.state = state;
    }

    public StateTransition stateDateTime(OffsetDateTime stateDateTime) {
        this.stateDateTime = stateDateTime;
        return this;
    }

    /**
     * The date and time in ISO 8601 format that indicates when this states was updated for this replenishment.
     *
     * @return stateDateTime
     **/
    @ApiModelProperty(example = "2021-01-02T09:00:00+01:00", required = true, value = "The date and time in ISO 8601 format that indicates when this states was updated for this replenishment.")
    public OffsetDateTime getStateDateTime() {
        return stateDateTime;
    }

    public void setStateDateTime(OffsetDateTime stateDateTime) {
        this.stateDateTime = stateDateTime;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        StateTransition stateTransition = (StateTransition) o;
        return Objects.equals(this.state, stateTransition.state) &&
                Objects.equals(this.stateDateTime, stateTransition.stateDateTime);
    }

    @Override
    public int hashCode() {
        return Objects.hash(state, stateDateTime);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class StateTransition {\n");

        sb.append("    state: ").append(toIndentedString(state)).append("\n");
        sb.append("    stateDateTime: ").append(toIndentedString(stateDateTime)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

