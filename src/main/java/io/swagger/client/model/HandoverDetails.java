/*
 * v8 - Retailer API
 * The bol.com API for retailers.
 *
 * OpenAPI spec version: 8.x
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

import java.io.IOException;
import java.util.Objects;

/**
 * HandoverDetails
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-04T20:35:33.904+01:00")
public class HandoverDetails {
    @SerializedName("meetsCustomerExpectation")
    private Boolean meetsCustomerExpectation = null;

    @SerializedName("earliestHandoverDateTime")
    private OffsetDateTime earliestHandoverDateTime = null;

    @SerializedName("latestHandoverDateTime")
    private OffsetDateTime latestHandoverDateTime = null;

    /**
     * The type of collection for this parcel.
     */
    @JsonAdapter(CollectionMethodEnum.Adapter.class)
    public enum CollectionMethodEnum {
        DROP_OFF("DROP_OFF"),

        PICK_UP("PICK_UP");

        private String value;

        CollectionMethodEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static CollectionMethodEnum fromValue(String text) {
            for (CollectionMethodEnum b : CollectionMethodEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<CollectionMethodEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final CollectionMethodEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public CollectionMethodEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return CollectionMethodEnum.fromValue(String.valueOf(value));
            }
        }
    }

    @SerializedName("collectionMethod")
    private CollectionMethodEnum collectionMethod = null;

    public HandoverDetails meetsCustomerExpectation(Boolean meetsCustomerExpectation) {
        this.meetsCustomerExpectation = meetsCustomerExpectation;
        return this;
    }

    /**
     * Indicates if you can use this label without receiving a strike if you handover before the latestHandoverDateTime. If this field is &#39;false&#39; you can still buy and use this label but it will have negative consequences on your performance score because the order will be delivered too early or too late.
     *
     * @return meetsCustomerExpectation
     **/
    @ApiModelProperty(example = "true", value = "Indicates if you can use this label without receiving a strike if you handover before the latestHandoverDateTime. If this field is 'false' you can still buy and use this label but it will have negative consequences on your performance score because the order will be delivered too early or too late.")
    public Boolean isMeetsCustomerExpectation() {
        return meetsCustomerExpectation;
    }

    public void setMeetsCustomerExpectation(Boolean meetsCustomerExpectation) {
        this.meetsCustomerExpectation = meetsCustomerExpectation;
    }

    public HandoverDetails earliestHandoverDateTime(OffsetDateTime earliestHandoverDateTime) {
        this.earliestHandoverDateTime = earliestHandoverDateTime;
        return this;
    }

    /**
     * The date and time at which the parcel can be earliest  at the transporter to make sure your parcel is delivered on time.
     *
     * @return earliestHandoverDateTime
     **/
    @ApiModelProperty(example = "2018-04-19T00:00:00+02:00", value = "The date and time at which the parcel can be earliest  at the transporter to make sure your parcel is delivered on time.")
    public OffsetDateTime getEarliestHandoverDateTime() {
        return earliestHandoverDateTime;
    }

    public void setEarliestHandoverDateTime(OffsetDateTime earliestHandoverDateTime) {
        this.earliestHandoverDateTime = earliestHandoverDateTime;
    }

    public HandoverDetails latestHandoverDateTime(OffsetDateTime latestHandoverDateTime) {
        this.latestHandoverDateTime = latestHandoverDateTime;
        return this;
    }

    /**
     * The date and time at which the parcel must ultimately be at the transporter to make sure your parcel is delivered on time. If you handover after this date you will receive a strike because you order will be delivered too late.
     *
     * @return latestHandoverDateTime
     **/
    @ApiModelProperty(example = "2018-04-19T19:00:00+02:00", value = "The date and time at which the parcel must ultimately be at the transporter to make sure your parcel is delivered on time. If you handover after this date you will receive a strike because you order will be delivered too late.")
    public OffsetDateTime getLatestHandoverDateTime() {
        return latestHandoverDateTime;
    }

    public void setLatestHandoverDateTime(OffsetDateTime latestHandoverDateTime) {
        this.latestHandoverDateTime = latestHandoverDateTime;
    }

    public HandoverDetails collectionMethod(CollectionMethodEnum collectionMethod) {
        this.collectionMethod = collectionMethod;
        return this;
    }

    /**
     * The type of collection for this parcel.
     *
     * @return collectionMethod
     **/
    @ApiModelProperty(example = "DROP_OFF", value = "The type of collection for this parcel.")
    public CollectionMethodEnum getCollectionMethod() {
        return collectionMethod;
    }

    public void setCollectionMethod(CollectionMethodEnum collectionMethod) {
        this.collectionMethod = collectionMethod;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        HandoverDetails handoverDetails = (HandoverDetails) o;
        return Objects.equals(this.meetsCustomerExpectation, handoverDetails.meetsCustomerExpectation) &&
                Objects.equals(this.earliestHandoverDateTime, handoverDetails.earliestHandoverDateTime) &&
                Objects.equals(this.latestHandoverDateTime, handoverDetails.latestHandoverDateTime) &&
                Objects.equals(this.collectionMethod, handoverDetails.collectionMethod);
    }

    @Override
    public int hashCode() {
        return Objects.hash(meetsCustomerExpectation, earliestHandoverDateTime, latestHandoverDateTime, collectionMethod);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class HandoverDetails {\n");

        sb.append("    meetsCustomerExpectation: ").append(toIndentedString(meetsCustomerExpectation)).append("\n");
        sb.append("    earliestHandoverDateTime: ").append(toIndentedString(earliestHandoverDateTime)).append("\n");
        sb.append("    latestHandoverDateTime: ").append(toIndentedString(latestHandoverDateTime)).append("\n");
        sb.append("    collectionMethod: ").append(toIndentedString(collectionMethod)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

