/*
 * v8 - Retailer API
 * The bol.com API for retailers.
 *
 * OpenAPI spec version: 8.x
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Commission
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-04T20:35:33.904+01:00")
public class Commission {
    @SerializedName("ean")
    private String ean = null;

    @SerializedName("condition")
    private String condition = null;

    @SerializedName("unitPrice")
    private BigDecimal unitPrice = null;

    @SerializedName("fixedAmount")
    private BigDecimal fixedAmount = null;

    @SerializedName("percentage")
    private BigDecimal percentage = null;

    @SerializedName("totalCost")
    private BigDecimal totalCost = null;

    @SerializedName("totalCostWithoutReduction")
    private BigDecimal totalCostWithoutReduction = null;

    @SerializedName("reductions")
    private List<Reduction> reductions = new ArrayList<Reduction>();

    public Commission ean(String ean) {
        this.ean = ean;
        return this;
    }

    /**
     * The EAN number associated with this product.
     *
     * @return ean
     **/
    @ApiModelProperty(example = "0000007740404", required = true, value = "The EAN number associated with this product.")
    public String getEan() {
        return ean;
    }

    public void setEan(String ean) {
        this.ean = ean;
    }

    public Commission condition(String condition) {
        this.condition = condition;
        return this;
    }

    /**
     * The condition of the offer.
     *
     * @return condition
     **/
    @ApiModelProperty(example = "NEW", required = true, value = "The condition of the offer.")
    public String getCondition() {
        return condition;
    }

    public void setCondition(String condition) {
        this.condition = condition;
    }

    public Commission unitPrice(BigDecimal unitPrice) {
        this.unitPrice = unitPrice;
        return this;
    }

    /**
     * The intended selling price per single unit up to 2 decimals precision, including VAT.
     *
     * @return unitPrice
     **/
    @ApiModelProperty(example = "59.0", required = true, value = "The intended selling price per single unit up to 2 decimals precision, including VAT.")
    public BigDecimal getUnitPrice() {
        return unitPrice;
    }

    public void setUnitPrice(BigDecimal unitPrice) {
        this.unitPrice = unitPrice;
    }

    public Commission fixedAmount(BigDecimal fixedAmount) {
        this.fixedAmount = fixedAmount;
        return this;
    }

    /**
     * A fixed commission fee, including VAT.
     *
     * @return fixedAmount
     **/
    @ApiModelProperty(example = "0.99", required = true, value = "A fixed commission fee, including VAT.")
    public BigDecimal getFixedAmount() {
        return fixedAmount;
    }

    public void setFixedAmount(BigDecimal fixedAmount) {
        this.fixedAmount = fixedAmount;
    }

    public Commission percentage(BigDecimal percentage) {
        this.percentage = percentage;
        return this;
    }

    /**
     * A percentage of commission, based on the intended selling price per unit, including VAT.
     *
     * @return percentage
     **/
    @ApiModelProperty(example = "15.0", required = true, value = "A percentage of commission, based on the intended selling price per unit, including VAT.")
    public BigDecimal getPercentage() {
        return percentage;
    }

    public void setPercentage(BigDecimal percentage) {
        this.percentage = percentage;
    }

    public Commission totalCost(BigDecimal totalCost) {
        this.totalCost = totalCost;
        return this;
    }

    /**
     * The total commission for selling this product at bol.com. The price includes VAT for Dutch sellers, and excludes VAT for Belgium sellers.
     *
     * @return totalCost
     **/
    @ApiModelProperty(example = "6.85", required = true, value = "The total commission for selling this product at bol.com. The price includes VAT for Dutch sellers, and excludes VAT for Belgium sellers.")
    public BigDecimal getTotalCost() {
        return totalCost;
    }

    public void setTotalCost(BigDecimal totalCost) {
        this.totalCost = totalCost;
    }

    public Commission totalCostWithoutReduction(BigDecimal totalCostWithoutReduction) {
        this.totalCostWithoutReduction = totalCostWithoutReduction;
        return this;
    }

    /**
     * The total commission for selling this product at bol.com without reductions including VAT.
     *
     * @return totalCostWithoutReduction
     **/
    @ApiModelProperty(example = "9.84", value = "The total commission for selling this product at bol.com without reductions including VAT.")
    public BigDecimal getTotalCostWithoutReduction() {
        return totalCostWithoutReduction;
    }

    public void setTotalCostWithoutReduction(BigDecimal totalCostWithoutReduction) {
        this.totalCostWithoutReduction = totalCostWithoutReduction;
    }

    public Commission reductions(List<Reduction> reductions) {
        this.reductions = reductions;
        return this;
    }

    public Commission addReductionsItem(Reduction reductionsItem) {
        this.reductions.add(reductionsItem);
        return this;
    }

    /**
     * Get reductions
     *
     * @return reductions
     **/
    @ApiModelProperty(required = true, value = "")
    public List<Reduction> getReductions() {
        return reductions;
    }

    public void setReductions(List<Reduction> reductions) {
        this.reductions = reductions;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Commission commission = (Commission) o;
        return Objects.equals(this.ean, commission.ean) &&
                Objects.equals(this.condition, commission.condition) &&
                Objects.equals(this.unitPrice, commission.unitPrice) &&
                Objects.equals(this.fixedAmount, commission.fixedAmount) &&
                Objects.equals(this.percentage, commission.percentage) &&
                Objects.equals(this.totalCost, commission.totalCost) &&
                Objects.equals(this.totalCostWithoutReduction, commission.totalCostWithoutReduction) &&
                Objects.equals(this.reductions, commission.reductions);
    }

    @Override
    public int hashCode() {
        return Objects.hash(ean, condition, unitPrice, fixedAmount, percentage, totalCost, totalCostWithoutReduction, reductions);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Commission {\n");

        sb.append("    ean: ").append(toIndentedString(ean)).append("\n");
        sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
        sb.append("    unitPrice: ").append(toIndentedString(unitPrice)).append("\n");
        sb.append("    fixedAmount: ").append(toIndentedString(fixedAmount)).append("\n");
        sb.append("    percentage: ").append(toIndentedString(percentage)).append("\n");
        sb.append("    totalCost: ").append(toIndentedString(totalCost)).append("\n");
        sb.append("    totalCostWithoutReduction: ").append(toIndentedString(totalCostWithoutReduction)).append("\n");
        sb.append("    reductions: ").append(toIndentedString(reductions)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

