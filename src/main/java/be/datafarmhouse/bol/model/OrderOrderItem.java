/*
 * v8 - Retailer API
 * The bol.com API for retailers.
 *
 * OpenAPI spec version: 8.x
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package be.datafarmhouse.bol.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Order item details from an order.
 */
@ApiModel(description = "Order item details from an order.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-04T20:35:33.904+01:00")
public class OrderOrderItem {
    @SerializedName("orderItemId")
    private String orderItemId = null;

    @SerializedName("cancellationRequest")
    private Boolean cancellationRequest = null;

    @SerializedName("fulfilment")
    private OrderFulfilment fulfilment = null;

    @SerializedName("offer")
    private OrderOffer offer = null;

    @SerializedName("product")
    private OrderProduct product = null;

    @SerializedName("quantity")
    private Integer quantity = null;

    @SerializedName("quantityShipped")
    private Integer quantityShipped = null;

    @SerializedName("quantityCancelled")
    private Integer quantityCancelled = null;

    @SerializedName("unitPrice")
    private BigDecimal unitPrice = null;

    @SerializedName("commission")
    private BigDecimal commission = null;

    @SerializedName("additionalServices")
    private List<AdditionalService> additionalServices = null;

    @SerializedName("latestChangedDateTime")
    private OffsetDateTime latestChangedDateTime = null;

    public OrderOrderItem orderItemId(String orderItemId) {
        this.orderItemId = orderItemId;
        return this;
    }

    /**
     * The id for the order item. One order can have multiple order items, but the list can only take one item.
     *
     * @return orderItemId
     **/
    @ApiModelProperty(example = "2012345678", value = "The id for the order item. One order can have multiple order items, but the list can only take one item.")
    public String getOrderItemId() {
        return orderItemId;
    }

    public void setOrderItemId(String orderItemId) {
        this.orderItemId = orderItemId;
    }

    public OrderOrderItem cancellationRequest(Boolean cancellationRequest) {
        this.cancellationRequest = cancellationRequest;
        return this;
    }

    /**
     * Indicates whether the order was cancelled on request of the customer before the retailer has shipped it.
     *
     * @return cancellationRequest
     **/
    @ApiModelProperty(example = "false", value = "Indicates whether the order was cancelled on request of the customer before the retailer has shipped it.")
    public Boolean isCancellationRequest() {
        return cancellationRequest;
    }

    public void setCancellationRequest(Boolean cancellationRequest) {
        this.cancellationRequest = cancellationRequest;
    }

    public OrderOrderItem fulfilment(OrderFulfilment fulfilment) {
        this.fulfilment = fulfilment;
        return this;
    }

    /**
     * Get fulfilment
     *
     * @return fulfilment
     **/
    @ApiModelProperty(value = "")
    public OrderFulfilment getFulfilment() {
        return fulfilment;
    }

    public void setFulfilment(OrderFulfilment fulfilment) {
        this.fulfilment = fulfilment;
    }

    public OrderOrderItem offer(OrderOffer offer) {
        this.offer = offer;
        return this;
    }

    /**
     * Get offer
     *
     * @return offer
     **/
    @ApiModelProperty(value = "")
    public OrderOffer getOffer() {
        return offer;
    }

    public void setOffer(OrderOffer offer) {
        this.offer = offer;
    }

    public OrderOrderItem product(OrderProduct product) {
        this.product = product;
        return this;
    }

    /**
     * Get product
     *
     * @return product
     **/
    @ApiModelProperty(value = "")
    public OrderProduct getProduct() {
        return product;
    }

    public void setProduct(OrderProduct product) {
        this.product = product;
    }

    public OrderOrderItem quantity(Integer quantity) {
        this.quantity = quantity;
        return this;
    }

    /**
     * Amount of ordered products for this order item id.
     *
     * @return quantity
     **/
    @ApiModelProperty(example = "10", value = "Amount of ordered products for this order item id.")
    public Integer getQuantity() {
        return quantity;
    }

    public void setQuantity(Integer quantity) {
        this.quantity = quantity;
    }

    public OrderOrderItem quantityShipped(Integer quantityShipped) {
        this.quantityShipped = quantityShipped;
        return this;
    }

    /**
     * Amount of shipped products for this order item id.
     *
     * @return quantityShipped
     **/
    @ApiModelProperty(example = "10", value = "Amount of shipped products for this order item id.")
    public Integer getQuantityShipped() {
        return quantityShipped;
    }

    public void setQuantityShipped(Integer quantityShipped) {
        this.quantityShipped = quantityShipped;
    }

    public OrderOrderItem quantityCancelled(Integer quantityCancelled) {
        this.quantityCancelled = quantityCancelled;
        return this;
    }

    /**
     * Amount of cancelled products for this order item id.
     *
     * @return quantityCancelled
     **/
    @ApiModelProperty(example = "0", value = "Amount of cancelled products for this order item id.")
    public Integer getQuantityCancelled() {
        return quantityCancelled;
    }

    public void setQuantityCancelled(Integer quantityCancelled) {
        this.quantityCancelled = quantityCancelled;
    }

    public OrderOrderItem unitPrice(BigDecimal unitPrice) {
        this.unitPrice = unitPrice;
        return this;
    }

    /**
     * The selling price to the customer of a single unit including VAT.
     *
     * @return unitPrice
     **/
    @ApiModelProperty(example = "12.99", value = "The selling price to the customer of a single unit including VAT.")
    public BigDecimal getUnitPrice() {
        return unitPrice;
    }

    public void setUnitPrice(BigDecimal unitPrice) {
        this.unitPrice = unitPrice;
    }

    public OrderOrderItem commission(BigDecimal commission) {
        this.commission = commission;
        return this;
    }

    /**
     * The commission for all quantities of this order item.
     *
     * @return commission
     **/
    @ApiModelProperty(example = "5.18", value = "The commission for all quantities of this order item.")
    public BigDecimal getCommission() {
        return commission;
    }

    public void setCommission(BigDecimal commission) {
        this.commission = commission;
    }

    public OrderOrderItem additionalServices(List<AdditionalService> additionalServices) {
        this.additionalServices = additionalServices;
        return this;
    }

    public OrderOrderItem addAdditionalServicesItem(AdditionalService additionalServicesItem) {
        if (this.additionalServices == null) {
            this.additionalServices = new ArrayList<AdditionalService>();
        }
        this.additionalServices.add(additionalServicesItem);
        return this;
    }

    /**
     * Get additionalServices
     *
     * @return additionalServices
     **/
    @ApiModelProperty(value = "")
    public List<AdditionalService> getAdditionalServices() {
        return additionalServices;
    }

    public void setAdditionalServices(List<AdditionalService> additionalServices) {
        this.additionalServices = additionalServices;
    }

    public OrderOrderItem latestChangedDateTime(OffsetDateTime latestChangedDateTime) {
        this.latestChangedDateTime = latestChangedDateTime;
        return this;
    }

    /**
     * The date and time in ISO 8601 format when the orderItem was last changed.
     *
     * @return latestChangedDateTime
     **/
    @ApiModelProperty(example = "2017-02-09T13:39:48+01:00", required = true, value = "The date and time in ISO 8601 format when the orderItem was last changed.")
    public OffsetDateTime getLatestChangedDateTime() {
        return latestChangedDateTime;
    }

    public void setLatestChangedDateTime(OffsetDateTime latestChangedDateTime) {
        this.latestChangedDateTime = latestChangedDateTime;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OrderOrderItem orderOrderItem = (OrderOrderItem) o;
        return Objects.equals(this.orderItemId, orderOrderItem.orderItemId) &&
                Objects.equals(this.cancellationRequest, orderOrderItem.cancellationRequest) &&
                Objects.equals(this.fulfilment, orderOrderItem.fulfilment) &&
                Objects.equals(this.offer, orderOrderItem.offer) &&
                Objects.equals(this.product, orderOrderItem.product) &&
                Objects.equals(this.quantity, orderOrderItem.quantity) &&
                Objects.equals(this.quantityShipped, orderOrderItem.quantityShipped) &&
                Objects.equals(this.quantityCancelled, orderOrderItem.quantityCancelled) &&
                Objects.equals(this.unitPrice, orderOrderItem.unitPrice) &&
                Objects.equals(this.commission, orderOrderItem.commission) &&
                Objects.equals(this.additionalServices, orderOrderItem.additionalServices) &&
                Objects.equals(this.latestChangedDateTime, orderOrderItem.latestChangedDateTime);
    }

    @Override
    public int hashCode() {
        return Objects.hash(orderItemId, cancellationRequest, fulfilment, offer, product, quantity, quantityShipped, quantityCancelled, unitPrice, commission, additionalServices, latestChangedDateTime);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OrderOrderItem {\n");

        sb.append("    orderItemId: ").append(toIndentedString(orderItemId)).append("\n");
        sb.append("    cancellationRequest: ").append(toIndentedString(cancellationRequest)).append("\n");
        sb.append("    fulfilment: ").append(toIndentedString(fulfilment)).append("\n");
        sb.append("    offer: ").append(toIndentedString(offer)).append("\n");
        sb.append("    product: ").append(toIndentedString(product)).append("\n");
        sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
        sb.append("    quantityShipped: ").append(toIndentedString(quantityShipped)).append("\n");
        sb.append("    quantityCancelled: ").append(toIndentedString(quantityCancelled)).append("\n");
        sb.append("    unitPrice: ").append(toIndentedString(unitPrice)).append("\n");
        sb.append("    commission: ").append(toIndentedString(commission)).append("\n");
        sb.append("    additionalServices: ").append(toIndentedString(additionalServices)).append("\n");
        sb.append("    latestChangedDateTime: ").append(toIndentedString(latestChangedDateTime)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

