/*
 * v8 - Retailer API
 * The bol.com API for retailers.
 *
 * OpenAPI spec version: 8.x
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package be.datafarmhouse.bol.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.LocalDate;

import java.io.IOException;
import java.util.Objects;

/**
 * A delivery option shows how and the costs of a transport for a shippable configuration
 */
@ApiModel(description = "A delivery option shows how and the costs of a transport for a shippable configuration")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-04T20:35:33.904+01:00")
public class DeliveryOption {
    @SerializedName("shippingLabelOfferId")
    private String shippingLabelOfferId = null;

    @SerializedName("recommended")
    private Boolean recommended = null;

    @SerializedName("validUntilDate")
    private LocalDate validUntilDate = null;

    @SerializedName("transporterCode")
    private String transporterCode = null;

    /**
     * The type of the label, representing the way an item is being transported. MAILBOX is a mailbox package with delivery scan. MAILBOX_LIGHT is a mailbox package without delivery scan. PARCEL is a normal package.
     */
    @JsonAdapter(LabelTypeEnum.Adapter.class)
    public enum LabelTypeEnum {
        PARCEL("PARCEL"),

        MAILBOX("MAILBOX"),

        MAILBOX_LIGHT("MAILBOX_LIGHT");

        private String value;

        LabelTypeEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static LabelTypeEnum fromValue(String text) {
            for (LabelTypeEnum b : LabelTypeEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<LabelTypeEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final LabelTypeEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public LabelTypeEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return LabelTypeEnum.fromValue(String.valueOf(value));
            }
        }
    }

    @SerializedName("labelType")
    private LabelTypeEnum labelType = null;

    @SerializedName("labelDisplayName")
    private String labelDisplayName = null;

    @SerializedName("labelPrice")
    private LabelPrice labelPrice = null;

    @SerializedName("packageRestrictions")
    private PackageRestrictions packageRestrictions = null;

    @SerializedName("handoverDetails")
    private HandoverDetails handoverDetails = null;

    public DeliveryOption shippingLabelOfferId(String shippingLabelOfferId) {
        this.shippingLabelOfferId = shippingLabelOfferId;
        return this;
    }

    /**
     * Unique identifier for the shipping label offer.
     *
     * @return shippingLabelOfferId
     **/
    @ApiModelProperty(example = "027b79fa-5743-40f0-94c7-0eac761af611", required = true, value = "Unique identifier for the shipping label offer.")
    public String getShippingLabelOfferId() {
        return shippingLabelOfferId;
    }

    public void setShippingLabelOfferId(String shippingLabelOfferId) {
        this.shippingLabelOfferId = shippingLabelOfferId;
    }

    public DeliveryOption recommended(Boolean recommended) {
        this.recommended = recommended;
        return this;
    }

    /**
     * Indicates whether this delivery option is recommended to be the best option to ship your order item(s) with.
     *
     * @return recommended
     **/
    @ApiModelProperty(example = "true", required = true, value = "Indicates whether this delivery option is recommended to be the best option to ship your order item(s) with.")
    public Boolean isRecommended() {
        return recommended;
    }

    public void setRecommended(Boolean recommended) {
        this.recommended = recommended;
    }

    public DeliveryOption validUntilDate(LocalDate validUntilDate) {
        this.validUntilDate = validUntilDate;
        return this;
    }

    /**
     * The date until the delivery option (incl total price) is valid.
     *
     * @return validUntilDate
     **/
    @ApiModelProperty(example = "2020-01-12", value = "The date until the delivery option (incl total price) is valid.")
    public LocalDate getValidUntilDate() {
        return validUntilDate;
    }

    public void setValidUntilDate(LocalDate validUntilDate) {
        this.validUntilDate = validUntilDate;
    }

    public DeliveryOption transporterCode(String transporterCode) {
        this.transporterCode = transporterCode;
        return this;
    }

    /**
     * A code representing the transporter which is being used for transportation.
     *
     * @return transporterCode
     **/
    @ApiModelProperty(example = "TNT", required = true, value = "A code representing the transporter which is being used for transportation.")
    public String getTransporterCode() {
        return transporterCode;
    }

    public void setTransporterCode(String transporterCode) {
        this.transporterCode = transporterCode;
    }

    public DeliveryOption labelType(LabelTypeEnum labelType) {
        this.labelType = labelType;
        return this;
    }

    /**
     * The type of the label, representing the way an item is being transported. MAILBOX is a mailbox package with delivery scan. MAILBOX_LIGHT is a mailbox package without delivery scan. PARCEL is a normal package.
     *
     * @return labelType
     **/
    @ApiModelProperty(example = "PARCEL", required = true, value = "The type of the label, representing the way an item is being transported. MAILBOX is a mailbox package with delivery scan. MAILBOX_LIGHT is a mailbox package without delivery scan. PARCEL is a normal package.")
    public LabelTypeEnum getLabelType() {
        return labelType;
    }

    public void setLabelType(LabelTypeEnum labelType) {
        this.labelType = labelType;
    }

    public DeliveryOption labelDisplayName(String labelDisplayName) {
        this.labelDisplayName = labelDisplayName;
        return this;
    }

    /**
     * The display name of the shipping label.
     *
     * @return labelDisplayName
     **/
    @ApiModelProperty(example = "PostNL & bol.com - Pakket", required = true, value = "The display name of the shipping label.")
    public String getLabelDisplayName() {
        return labelDisplayName;
    }

    public void setLabelDisplayName(String labelDisplayName) {
        this.labelDisplayName = labelDisplayName;
    }

    public DeliveryOption labelPrice(LabelPrice labelPrice) {
        this.labelPrice = labelPrice;
        return this;
    }

    /**
     * Get labelPrice
     *
     * @return labelPrice
     **/
    @ApiModelProperty(required = true, value = "")
    public LabelPrice getLabelPrice() {
        return labelPrice;
    }

    public void setLabelPrice(LabelPrice labelPrice) {
        this.labelPrice = labelPrice;
    }

    public DeliveryOption packageRestrictions(PackageRestrictions packageRestrictions) {
        this.packageRestrictions = packageRestrictions;
        return this;
    }

    /**
     * Get packageRestrictions
     *
     * @return packageRestrictions
     **/
    @ApiModelProperty(required = true, value = "")
    public PackageRestrictions getPackageRestrictions() {
        return packageRestrictions;
    }

    public void setPackageRestrictions(PackageRestrictions packageRestrictions) {
        this.packageRestrictions = packageRestrictions;
    }

    public DeliveryOption handoverDetails(HandoverDetails handoverDetails) {
        this.handoverDetails = handoverDetails;
        return this;
    }

    /**
     * Get handoverDetails
     *
     * @return handoverDetails
     **/
    @ApiModelProperty(value = "")
    public HandoverDetails getHandoverDetails() {
        return handoverDetails;
    }

    public void setHandoverDetails(HandoverDetails handoverDetails) {
        this.handoverDetails = handoverDetails;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DeliveryOption deliveryOption = (DeliveryOption) o;
        return Objects.equals(this.shippingLabelOfferId, deliveryOption.shippingLabelOfferId) &&
                Objects.equals(this.recommended, deliveryOption.recommended) &&
                Objects.equals(this.validUntilDate, deliveryOption.validUntilDate) &&
                Objects.equals(this.transporterCode, deliveryOption.transporterCode) &&
                Objects.equals(this.labelType, deliveryOption.labelType) &&
                Objects.equals(this.labelDisplayName, deliveryOption.labelDisplayName) &&
                Objects.equals(this.labelPrice, deliveryOption.labelPrice) &&
                Objects.equals(this.packageRestrictions, deliveryOption.packageRestrictions) &&
                Objects.equals(this.handoverDetails, deliveryOption.handoverDetails);
    }

    @Override
    public int hashCode() {
        return Objects.hash(shippingLabelOfferId, recommended, validUntilDate, transporterCode, labelType, labelDisplayName, labelPrice, packageRestrictions, handoverDetails);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DeliveryOption {\n");

        sb.append("    shippingLabelOfferId: ").append(toIndentedString(shippingLabelOfferId)).append("\n");
        sb.append("    recommended: ").append(toIndentedString(recommended)).append("\n");
        sb.append("    validUntilDate: ").append(toIndentedString(validUntilDate)).append("\n");
        sb.append("    transporterCode: ").append(toIndentedString(transporterCode)).append("\n");
        sb.append("    labelType: ").append(toIndentedString(labelType)).append("\n");
        sb.append("    labelDisplayName: ").append(toIndentedString(labelDisplayName)).append("\n");
        sb.append("    labelPrice: ").append(toIndentedString(labelPrice)).append("\n");
        sb.append("    packageRestrictions: ").append(toIndentedString(packageRestrictions)).append("\n");
        sb.append("    handoverDetails: ").append(toIndentedString(handoverDetails)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

