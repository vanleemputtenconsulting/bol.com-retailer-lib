/*
 * v8 - Retailer API
 * The bol.com API for retailers.
 *
 * OpenAPI spec version: 8.x
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package be.datafarmhouse.bol.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.Objects;

/**
 * The relevance score of a product in a promotion.
 */
@ApiModel(description = "The relevance score of a product in a promotion.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-04T20:35:33.904+01:00")
public class RelevanceScore {
    /**
     * The country for which the relevance score has been calculated against.
     */
    @JsonAdapter(CountryCodeEnum.Adapter.class)
    public enum CountryCodeEnum {
        NL("NL"),

        BE("BE");

        private String value;

        CountryCodeEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static CountryCodeEnum fromValue(String text) {
            for (CountryCodeEnum b : CountryCodeEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<CountryCodeEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final CountryCodeEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public CountryCodeEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return CountryCodeEnum.fromValue(String.valueOf(value));
            }
        }
    }

    @SerializedName("countryCode")
    private CountryCodeEnum countryCode = null;

    @SerializedName("relevanceScore")
    private Integer relevanceScore = null;

    public RelevanceScore countryCode(CountryCodeEnum countryCode) {
        this.countryCode = countryCode;
        return this;
    }

    /**
     * The country for which the relevance score has been calculated against.
     *
     * @return countryCode
     **/
    @ApiModelProperty(example = "NL", value = "The country for which the relevance score has been calculated against.")
    public CountryCodeEnum getCountryCode() {
        return countryCode;
    }

    public void setCountryCode(CountryCodeEnum countryCode) {
        this.countryCode = countryCode;
    }

    public RelevanceScore relevanceScore(Integer relevanceScore) {
        this.relevanceScore = relevanceScore;
        return this;
    }

    /**
     * The calculated relevance score for the product.
     *
     * @return relevanceScore
     **/
    @ApiModelProperty(example = "72", value = "The calculated relevance score for the product.")
    public Integer getRelevanceScore() {
        return relevanceScore;
    }

    public void setRelevanceScore(Integer relevanceScore) {
        this.relevanceScore = relevanceScore;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        RelevanceScore relevanceScore = (RelevanceScore) o;
        return Objects.equals(this.countryCode, relevanceScore.countryCode) &&
                Objects.equals(this.relevanceScore, relevanceScore.relevanceScore);
    }

    @Override
    public int hashCode() {
        return Objects.hash(countryCode, relevanceScore);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class RelevanceScore {\n");

        sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
        sb.append("    relevanceScore: ").append(toIndentedString(relevanceScore)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

