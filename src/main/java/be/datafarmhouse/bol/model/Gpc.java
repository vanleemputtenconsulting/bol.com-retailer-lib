/*
 * v8 - Retailer API
 * The bol.com API for retailers.
 *
 * OpenAPI spec version: 8.x
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package be.datafarmhouse.bol.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Gpc
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-04T20:35:33.904+01:00")
public class Gpc {
    @SerializedName("chunkId")
    private String chunkId = null;

    public Gpc chunkId(String chunkId) {
        this.chunkId = chunkId;
        return this;
    }

    /**
     * The identifier of the current GPC/Product Classification.
     *
     * @return chunkId
     **/
    @ApiModelProperty(example = "30005965", required = true, value = "The identifier of the current GPC/Product Classification.")
    public String getChunkId() {
        return chunkId;
    }

    public void setChunkId(String chunkId) {
        this.chunkId = chunkId;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Gpc gpc = (Gpc) o;
        return Objects.equals(this.chunkId, gpc.chunkId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(chunkId);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Gpc {\n");

        sb.append("    chunkId: ").append(toIndentedString(chunkId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

