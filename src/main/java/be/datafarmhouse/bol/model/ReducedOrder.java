/*
 * v8 - Retailer API
 * The bol.com API for retailers.
 *
 * OpenAPI spec version: 8.x
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package be.datafarmhouse.bol.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * An order.
 */
@ApiModel(description = "An order.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-04T20:35:33.904+01:00")
public class ReducedOrder {
    @SerializedName("orderId")
    private String orderId = null;

    @SerializedName("orderPlacedDateTime")
    private OffsetDateTime orderPlacedDateTime = null;

    @SerializedName("orderItems")
    private List<ReducedOrderItem> orderItems = new ArrayList<ReducedOrderItem>();

    public ReducedOrder orderId(String orderId) {
        this.orderId = orderId;
        return this;
    }

    /**
     * The identifier of the order.
     *
     * @return orderId
     **/
    @ApiModelProperty(example = "A2K8290LP8", required = true, value = "The identifier of the order.")
    public String getOrderId() {
        return orderId;
    }

    public void setOrderId(String orderId) {
        this.orderId = orderId;
    }

    public ReducedOrder orderPlacedDateTime(OffsetDateTime orderPlacedDateTime) {
        this.orderPlacedDateTime = orderPlacedDateTime;
        return this;
    }

    /**
     * The date and time in ISO 8601 format when the order was placed.
     *
     * @return orderPlacedDateTime
     **/
    @ApiModelProperty(example = "2017-02-09T12:39:48+01:00", required = true, value = "The date and time in ISO 8601 format when the order was placed.")
    public OffsetDateTime getOrderPlacedDateTime() {
        return orderPlacedDateTime;
    }

    public void setOrderPlacedDateTime(OffsetDateTime orderPlacedDateTime) {
        this.orderPlacedDateTime = orderPlacedDateTime;
    }

    public ReducedOrder orderItems(List<ReducedOrderItem> orderItems) {
        this.orderItems = orderItems;
        return this;
    }

    public ReducedOrder addOrderItemsItem(ReducedOrderItem orderItemsItem) {
        this.orderItems.add(orderItemsItem);
        return this;
    }

    /**
     * Get orderItems
     *
     * @return orderItems
     **/
    @ApiModelProperty(required = true, value = "")
    public List<ReducedOrderItem> getOrderItems() {
        return orderItems;
    }

    public void setOrderItems(List<ReducedOrderItem> orderItems) {
        this.orderItems = orderItems;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ReducedOrder reducedOrder = (ReducedOrder) o;
        return Objects.equals(this.orderId, reducedOrder.orderId) &&
                Objects.equals(this.orderPlacedDateTime, reducedOrder.orderPlacedDateTime) &&
                Objects.equals(this.orderItems, reducedOrder.orderItems);
    }

    @Override
    public int hashCode() {
        return Objects.hash(orderId, orderPlacedDateTime, orderItems);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ReducedOrder {\n");

        sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
        sb.append("    orderPlacedDateTime: ").append(toIndentedString(orderPlacedDateTime)).append("\n");
        sb.append("    orderItems: ").append(toIndentedString(orderItems)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

