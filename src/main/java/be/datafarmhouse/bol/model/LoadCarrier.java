/*
 * v8 - Retailer API
 * The bol.com API for retailers.
 *
 * OpenAPI spec version: 8.x
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package be.datafarmhouse.bol.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

import java.io.IOException;
import java.util.Objects;

/**
 * LoadCarrier
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-04T20:35:33.904+01:00")
public class LoadCarrier {
    @SerializedName("sscc")
    private String sscc = null;

    @SerializedName("transportLabelTrackAndTrace")
    private String transportLabelTrackAndTrace = null;

    /**
     * The current state of the transport for this load carrier.
     */
    @JsonAdapter(TransportStateEnum.Adapter.class)
    public enum TransportStateEnum {
        ANNOUNCED("ANNOUNCED"),

        PICKED_UP("PICKED_UP"),

        UNDERWAY("UNDERWAY"),

        DELAYED("DELAYED"),

        ARRIVED("ARRIVED"),

        ERROR("ERROR");

        private String value;

        TransportStateEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static TransportStateEnum fromValue(String text) {
            for (TransportStateEnum b : TransportStateEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<TransportStateEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final TransportStateEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public TransportStateEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return TransportStateEnum.fromValue(String.valueOf(value));
            }
        }
    }

    @SerializedName("transportState")
    private TransportStateEnum transportState = null;

    @SerializedName("transportStateUpdateDateTime")
    private OffsetDateTime transportStateUpdateDateTime = null;

    public LoadCarrier sscc(String sscc) {
        this.sscc = sscc;
        return this;
    }

    /**
     * The Serial Shipping Container Code (SSCC) for this load carrier.
     *
     * @return sscc
     **/
    @ApiModelProperty(example = "020001200000007000", value = "The Serial Shipping Container Code (SSCC) for this load carrier.")
    public String getSscc() {
        return sscc;
    }

    public void setSscc(String sscc) {
        this.sscc = sscc;
    }

    public LoadCarrier transportLabelTrackAndTrace(String transportLabelTrackAndTrace) {
        this.transportLabelTrackAndTrace = transportLabelTrackAndTrace;
        return this;
    }

    /**
     * The track and trace code for this load carrier.
     *
     * @return transportLabelTrackAndTrace
     **/
    @ApiModelProperty(example = "3SJTXX216692157", value = "The track and trace code for this load carrier.")
    public String getTransportLabelTrackAndTrace() {
        return transportLabelTrackAndTrace;
    }

    public void setTransportLabelTrackAndTrace(String transportLabelTrackAndTrace) {
        this.transportLabelTrackAndTrace = transportLabelTrackAndTrace;
    }

    public LoadCarrier transportState(TransportStateEnum transportState) {
        this.transportState = transportState;
        return this;
    }

    /**
     * The current state of the transport for this load carrier.
     *
     * @return transportState
     **/
    @ApiModelProperty(example = "ANNOUNCED", required = true, value = "The current state of the transport for this load carrier.")
    public TransportStateEnum getTransportState() {
        return transportState;
    }

    public void setTransportState(TransportStateEnum transportState) {
        this.transportState = transportState;
    }

    public LoadCarrier transportStateUpdateDateTime(OffsetDateTime transportStateUpdateDateTime) {
        this.transportStateUpdateDateTime = transportStateUpdateDateTime;
        return this;
    }

    /**
     * The date and time in ISO 8601 format when the latest update for this transport was received.
     *
     * @return transportStateUpdateDateTime
     **/
    @ApiModelProperty(example = "2021-01-02T09:00:00+01:00", required = true, value = "The date and time in ISO 8601 format when the latest update for this transport was received.")
    public OffsetDateTime getTransportStateUpdateDateTime() {
        return transportStateUpdateDateTime;
    }

    public void setTransportStateUpdateDateTime(OffsetDateTime transportStateUpdateDateTime) {
        this.transportStateUpdateDateTime = transportStateUpdateDateTime;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        LoadCarrier loadCarrier = (LoadCarrier) o;
        return Objects.equals(this.sscc, loadCarrier.sscc) &&
                Objects.equals(this.transportLabelTrackAndTrace, loadCarrier.transportLabelTrackAndTrace) &&
                Objects.equals(this.transportState, loadCarrier.transportState) &&
                Objects.equals(this.transportStateUpdateDateTime, loadCarrier.transportStateUpdateDateTime);
    }

    @Override
    public int hashCode() {
        return Objects.hash(sscc, transportLabelTrackAndTrace, transportState, transportStateUpdateDateTime);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class LoadCarrier {\n");

        sb.append("    sscc: ").append(toIndentedString(sscc)).append("\n");
        sb.append("    transportLabelTrackAndTrace: ").append(toIndentedString(transportLabelTrackAndTrace)).append("\n");
        sb.append("    transportState: ").append(toIndentedString(transportState)).append("\n");
        sb.append("    transportStateUpdateDateTime: ").append(toIndentedString(transportStateUpdateDateTime)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

