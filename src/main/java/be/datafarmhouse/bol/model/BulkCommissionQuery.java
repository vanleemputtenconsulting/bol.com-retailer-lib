/*
 * v8 - Retailer API
 * The bol.com API for retailers.
 *
 * OpenAPI spec version: 8.x
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package be.datafarmhouse.bol.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.math.BigDecimal;
import java.util.Objects;

/**
 * BulkCommissionQuery
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-04T20:35:33.904+01:00")
public class BulkCommissionQuery {
    @SerializedName("ean")
    private String ean = null;

    /**
     * The condition of the offer.
     */
    @JsonAdapter(ConditionEnum.Adapter.class)
    public enum ConditionEnum {
        NEW("NEW"),

        AS_NEW("AS_NEW"),

        GOOD("GOOD"),

        REASONABLE("REASONABLE"),

        MODERATE("MODERATE");

        private String value;

        ConditionEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static ConditionEnum fromValue(String text) {
            for (ConditionEnum b : ConditionEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<ConditionEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final ConditionEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public ConditionEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return ConditionEnum.fromValue(String.valueOf(value));
            }
        }
    }

    @SerializedName("condition")
    private ConditionEnum condition = null;

    @SerializedName("unitPrice")
    private BigDecimal unitPrice = null;

    public BulkCommissionQuery ean(String ean) {
        this.ean = ean;
        return this;
    }

    /**
     * The EAN number associated with this product.
     *
     * @return ean
     **/
    @ApiModelProperty(example = "0000007740404", required = true, value = "The EAN number associated with this product.")
    public String getEan() {
        return ean;
    }

    public void setEan(String ean) {
        this.ean = ean;
    }

    public BulkCommissionQuery condition(ConditionEnum condition) {
        this.condition = condition;
        return this;
    }

    /**
     * The condition of the offer.
     *
     * @return condition
     **/
    @ApiModelProperty(example = "NEW", value = "The condition of the offer.")
    public ConditionEnum getCondition() {
        return condition;
    }

    public void setCondition(ConditionEnum condition) {
        this.condition = condition;
    }

    public BulkCommissionQuery unitPrice(BigDecimal unitPrice) {
        this.unitPrice = unitPrice;
        return this;
    }

    /**
     * The price of the product with a period as a decimal separator. The price should always have two decimals precision.
     * minimum: 0
     * maximum: 9999
     *
     * @return unitPrice
     **/
    @ApiModelProperty(example = "59.0", required = true, value = "The price of the product with a period as a decimal separator. The price should always have two decimals precision.")
    public BigDecimal getUnitPrice() {
        return unitPrice;
    }

    public void setUnitPrice(BigDecimal unitPrice) {
        this.unitPrice = unitPrice;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        BulkCommissionQuery bulkCommissionQuery = (BulkCommissionQuery) o;
        return Objects.equals(this.ean, bulkCommissionQuery.ean) &&
                Objects.equals(this.condition, bulkCommissionQuery.condition) &&
                Objects.equals(this.unitPrice, bulkCommissionQuery.unitPrice);
    }

    @Override
    public int hashCode() {
        return Objects.hash(ean, condition, unitPrice);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class BulkCommissionQuery {\n");

        sb.append("    ean: ").append(toIndentedString(ean)).append("\n");
        sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
        sb.append("    unitPrice: ").append(toIndentedString(unitPrice)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

