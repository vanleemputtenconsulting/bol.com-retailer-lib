/*
 * v8 - Retailer API
 * The bol.com API for retailers.
 *
 * OpenAPI spec version: 8.x
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package be.datafarmhouse.bol.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.LocalDate;

import java.io.IOException;
import java.util.Objects;

/**
 * ShipmentFulfilment
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-04T20:35:33.904+01:00")
public class ShipmentFulfilment {
    /**
     * The fulfilment method. Fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB).
     */
    @JsonAdapter(MethodEnum.Adapter.class)
    public enum MethodEnum {
        FBR("FBR"),

        FBB("FBB");

        private String value;

        MethodEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static MethodEnum fromValue(String text) {
            for (MethodEnum b : MethodEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<MethodEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final MethodEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public MethodEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return MethodEnum.fromValue(String.valueOf(value));
            }
        }
    }

    @SerializedName("method")
    private MethodEnum method = null;

    /**
     * The party that manages the distribution, either bol.com or the retailer itself.
     */
    @JsonAdapter(DistributionPartyEnum.Adapter.class)
    public enum DistributionPartyEnum {
        RETAILER("RETAILER"),

        BOL("BOL");

        private String value;

        DistributionPartyEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static DistributionPartyEnum fromValue(String text) {
            for (DistributionPartyEnum b : DistributionPartyEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<DistributionPartyEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final DistributionPartyEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public DistributionPartyEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return DistributionPartyEnum.fromValue(String.valueOf(value));
            }
        }
    }

    @SerializedName("distributionParty")
    private DistributionPartyEnum distributionParty = null;

    @SerializedName("latestDeliveryDate")
    private LocalDate latestDeliveryDate = null;

    public ShipmentFulfilment method(MethodEnum method) {
        this.method = method;
        return this;
    }

    /**
     * The fulfilment method. Fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB).
     *
     * @return method
     **/
    @ApiModelProperty(example = "FBR", value = "The fulfilment method. Fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB).")
    public MethodEnum getMethod() {
        return method;
    }

    public void setMethod(MethodEnum method) {
        this.method = method;
    }

    public ShipmentFulfilment distributionParty(DistributionPartyEnum distributionParty) {
        this.distributionParty = distributionParty;
        return this;
    }

    /**
     * The party that manages the distribution, either bol.com or the retailer itself.
     *
     * @return distributionParty
     **/
    @ApiModelProperty(example = "RETAILER", value = "The party that manages the distribution, either bol.com or the retailer itself.")
    public DistributionPartyEnum getDistributionParty() {
        return distributionParty;
    }

    public void setDistributionParty(DistributionPartyEnum distributionParty) {
        this.distributionParty = distributionParty;
    }

    public ShipmentFulfilment latestDeliveryDate(LocalDate latestDeliveryDate) {
        this.latestDeliveryDate = latestDeliveryDate;
        return this;
    }

    /**
     * The ultimate delivery date at which this order must be delivered at the customer&#39;s shipping address. This field is empty in case the exactDeliveryDate is filled.
     *
     * @return latestDeliveryDate
     **/
    @ApiModelProperty(example = "2017-02-10", value = "The ultimate delivery date at which this order must be delivered at the customer's shipping address. This field is empty in case the exactDeliveryDate is filled.")
    public LocalDate getLatestDeliveryDate() {
        return latestDeliveryDate;
    }

    public void setLatestDeliveryDate(LocalDate latestDeliveryDate) {
        this.latestDeliveryDate = latestDeliveryDate;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ShipmentFulfilment shipmentFulfilment = (ShipmentFulfilment) o;
        return Objects.equals(this.method, shipmentFulfilment.method) &&
                Objects.equals(this.distributionParty, shipmentFulfilment.distributionParty) &&
                Objects.equals(this.latestDeliveryDate, shipmentFulfilment.latestDeliveryDate);
    }

    @Override
    public int hashCode() {
        return Objects.hash(method, distributionParty, latestDeliveryDate);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ShipmentFulfilment {\n");

        sb.append("    method: ").append(toIndentedString(method)).append("\n");
        sb.append("    distributionParty: ").append(toIndentedString(distributionParty)).append("\n");
        sb.append("    latestDeliveryDate: ").append(toIndentedString(latestDeliveryDate)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

