/*
 * v8 - Retailer API
 * The bol.com API for retailers.
 *
 * OpenAPI spec version: 8.x
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package be.datafarmhouse.bol.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * UploadReportAttribute
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-04T20:35:33.904+01:00")
public class UploadReportAttribute {
    @SerializedName("id")
    private String id = null;

    @SerializedName("values")
    private List<UploadReportValue> values = new ArrayList<UploadReportValue>();

    /**
     * The processing state of the submitted attribute.
     */
    @JsonAdapter(StatusEnum.Adapter.class)
    public enum StatusEnum {
        IN_PROGRESS("IN_PROGRESS"),

        DECLINED("DECLINED"),

        PUBLISHED("PUBLISHED");

        private String value;

        StatusEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static StatusEnum fromValue(String text) {
            for (StatusEnum b : StatusEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<StatusEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public StatusEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return StatusEnum.fromValue(String.valueOf(value));
            }
        }
    }

    @SerializedName("status")
    private StatusEnum status = null;

    /**
     * The reason code explaining why the value was rejected.
     */
    @JsonAdapter(SubStatusEnum.Adapter.class)
    public enum SubStatusEnum {
        BLOCKED_BY_RATE_LIMITER("BLOCKED_BY_RATE_LIMITER"),

        CREATED("CREATED"),

        DEPRECATED("DEPRECATED"),

        IDENTICAL_VALUE_AS_BEFORE("IDENTICAL_VALUE_AS_BEFORE"),

        MATCH_TO_PRODUCT_FAILED("MATCH_TO_PRODUCT_FAILED"),

        NOT_CHANGED("NOT_CHANGED"),

        NOT_RECENT("NOT_RECENT"),

        PROCESSING_STARTED("PROCESSING_STARTED"),

        RECEIVED("RECEIVED"),

        REJECTED("REJECTED"),

        REJECTED_BY_BRAND_AUTHORITY("REJECTED_BY_BRAND_AUTHORITY"),

        REJECTED_BY_LOGISTIC("REJECTED_BY_LOGISTIC"),

        REJECTED_NO_DATA("REJECTED_NO_DATA"),

        REJECTED_UNPROCESSABLE("REJECTED_UNPROCESSABLE"),

        SELECTED("SELECTED"),

        SELECTED_BY_BRAND_AUTHORITY("SELECTED_BY_BRAND_AUTHORITY"),

        SELECTED_BY_LOGISTIC("SELECTED_BY_LOGISTIC"),

        SELECTION_DELETED("SELECTION_DELETED"),

        SELECTION_MERGED("SELECTION_MERGED"),

        TIMED_OUT("TIMED_OUT"),

        UPDATED("UPDATED"),

        UPLOADED("UPLOADED"),

        UNKNOWN("UNKNOWN"),

        VALID_EAN("VALID_EAN"),

        VALIDATED("VALIDATED"),

        VALIDATION_FAILED("VALIDATION_FAILED"),

        VALIDATION_FAILED_DISABLED_GPC_CODE("VALIDATION_FAILED_DISABLED_GPC_CODE"),

        VALIDATION_FAILED_DOES_NOT_EXIST("VALIDATION_FAILED_DOES_NOT_EXIST"),

        VALIDATION_FAILED_INVALID_DATE("VALIDATION_FAILED_INVALID_DATE"),

        VALIDATION_FAILED_INVALID_EAN("VALIDATION_FAILED_INVALID_EAN"),

        VALIDATION_FAILED_INVALID_FRACTION("VALIDATION_FAILED_INVALID_FRACTION"),

        VALIDATION_FAILED_INVALID_GPC_CODE("VALIDATION_FAILED_INVALID_GPC_CODE"),

        VALIDATION_FAILED_INVALID_INTEGER("VALIDATION_FAILED_INVALID_INTEGER"),

        VALIDATION_FAILED_INVALID_ISODATE("VALIDATION_FAILED_INVALID_ISODATE"),

        VALIDATION_FAILED_INVALID_ISODATETIME("VALIDATION_FAILED_INVALID_ISODATETIME"),

        VALIDATION_FAILED_INVALID_LOV_VALUE("VALIDATION_FAILED_INVALID_LOV_VALUE"),

        VALIDATION_FAILED_INVALID_MULTIPLE_VALUES("VALIDATION_FAILED_INVALID_MULTIPLE_VALUES"),

        VALIDATION_FAILED_INVALID_NO_VALUES("VALIDATION_FAILED_INVALID_NO_VALUES"),

        VALIDATION_FAILED_INVALID_NUMBER("VALIDATION_FAILED_INVALID_NUMBER"),

        VALIDATION_FAILED_INVALID_NUMERIC_TEXT("VALIDATION_FAILED_INVALID_NUMERIC_TEXT"),

        VALIDATION_FAILED_INVALID_TEXT("VALIDATION_FAILED_INVALID_TEXT"),

        VALIDATION_FAILED_INVALID_UNIT("VALIDATION_FAILED_INVALID_UNIT"),

        VALIDATION_FAILED_INVALID_URL("VALIDATION_FAILED_INVALID_URL"),

        VALIDATION_FAILED_INVALID_VALUES("VALIDATION_FAILED_INVALID_VALUES"),

        VALIDATION_FAILED_NOT_ALLOWED("VALIDATION_FAILED_NOT_ALLOWED"),

        VALIDATION_FAILED_UNKNOWN_BASETYPE("VALIDATION_FAILED_UNKNOWN_BASETYPE"),

        WAITING_FOR_GLOBAL_ID("WAITING_FOR_GLOBAL_ID");

        private String value;

        SubStatusEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static SubStatusEnum fromValue(String text) {
            for (SubStatusEnum b : SubStatusEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<SubStatusEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final SubStatusEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public SubStatusEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return SubStatusEnum.fromValue(String.valueOf(value));
            }
        }
    }

    @SerializedName("subStatus")
    private SubStatusEnum subStatus = null;

    @SerializedName("subStatusDescription")
    private String subStatusDescription = null;

    public UploadReportAttribute id(String id) {
        this.id = id;
        return this;
    }

    /**
     * The identifier of the attribute for which the value has changed.
     *
     * @return id
     **/
    @ApiModelProperty(example = "Width", required = true, value = "The identifier of the attribute for which the value has changed.")
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public UploadReportAttribute values(List<UploadReportValue> values) {
        this.values = values;
        return this;
    }

    public UploadReportAttribute addValuesItem(UploadReportValue valuesItem) {
        this.values.add(valuesItem);
        return this;
    }

    /**
     * Get values
     *
     * @return values
     **/
    @ApiModelProperty(required = true, value = "")
    public List<UploadReportValue> getValues() {
        return values;
    }

    public void setValues(List<UploadReportValue> values) {
        this.values = values;
    }

    public UploadReportAttribute status(StatusEnum status) {
        this.status = status;
        return this;
    }

    /**
     * The processing state of the submitted attribute.
     *
     * @return status
     **/
    @ApiModelProperty(example = "DECLINED", required = true, value = "The processing state of the submitted attribute.")
    public StatusEnum getStatus() {
        return status;
    }

    public void setStatus(StatusEnum status) {
        this.status = status;
    }

    public UploadReportAttribute subStatus(SubStatusEnum subStatus) {
        this.subStatus = subStatus;
        return this;
    }

    /**
     * The reason code explaining why the value was rejected.
     *
     * @return subStatus
     **/
    @ApiModelProperty(example = "INVALID_NUMBER", value = "The reason code explaining why the value was rejected.")
    public SubStatusEnum getSubStatus() {
        return subStatus;
    }

    public void setSubStatus(SubStatusEnum subStatus) {
        this.subStatus = subStatus;
    }

    public UploadReportAttribute subStatusDescription(String subStatusDescription) {
        this.subStatusDescription = subStatusDescription;
        return this;
    }

    /**
     * The reason explaining why the value was rejected.
     *
     * @return subStatusDescription
     **/
    @ApiModelProperty(example = "The provided number is not correct.", value = "The reason explaining why the value was rejected.")
    public String getSubStatusDescription() {
        return subStatusDescription;
    }

    public void setSubStatusDescription(String subStatusDescription) {
        this.subStatusDescription = subStatusDescription;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UploadReportAttribute uploadReportAttribute = (UploadReportAttribute) o;
        return Objects.equals(this.id, uploadReportAttribute.id) &&
                Objects.equals(this.values, uploadReportAttribute.values) &&
                Objects.equals(this.status, uploadReportAttribute.status) &&
                Objects.equals(this.subStatus, uploadReportAttribute.subStatus) &&
                Objects.equals(this.subStatusDescription, uploadReportAttribute.subStatusDescription);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, values, status, subStatus, subStatusDescription);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class UploadReportAttribute {\n");

        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    values: ").append(toIndentedString(values)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    subStatus: ").append(toIndentedString(subStatus)).append("\n");
        sb.append("    subStatusDescription: ").append(toIndentedString(subStatusDescription)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

